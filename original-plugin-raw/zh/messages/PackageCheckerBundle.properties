action.PCAnalyzeVulnerableDependencies.description=显示工具窗口，并根据已知漏洞检查导入的依赖项
action.PCAnalyzeVulnerableDependencies.text=Vulnerable Dependencies…
action.PCFindUsagesAction.description=查找相关库的用法
action.PCFindUsagesAction.error.usages.notfound.text=找不到请求的依赖项对应的库或模块
action.PCFindUsagesAction.indicator.collecting.text=正在收集要搜索的库
action.PCFindUsagesAction.indicator.looking.text=正在查找用法
action.PCFindUsagesAction.text=查找用法
action.PCNavigateToSource.description=在编辑器中打开相关文件
action.PCNavigateToSource.text=跳转到源
action.PCOnlyVulnerableToggleAction.description=筛选出安全的依赖项
action.PCOnlyVulnerableToggleAction.text=Show Safe Dependencies
action.PCRefreshAction.description=收集依赖项并重新检查
action.PCRefreshAction.text=刷新
action.link.read.more=阅读更多
action.link.report.false.positive=报告误报
change.version.directly.quickfix=将依赖项版本修正为 {0}
change.version.property.quickfix=将属性升级到 {0}
change.version.quickfix=更新到不受影响的版本 {0}
change.version.quickfix.familyname=更改易受攻击的依赖项版本
checkmarx.copyright.notice=<html>结果由 <a href\="https\://checkmarx.com">Checkmarx</a>  © 提供技术支持</html>
checkmarx.copyright.notice.text=结果由 Checkmarx © 提供支持
cve.label.text={0}，分数\: {1}
declare.package.quickfix=声明依赖项\: {0}
dependency.copy.description.link=复制描述至剪切板
dependency.safe.version.link=<a href \="{0}{1}">{2}</a>
dependency.safe.version.title=升级到 {0}
dependency.tree.defaultModuleModel=All libs from {0}
dependency.tree.failed.to.emit.message=无法发出软件包 {0}
dependency.tree.package.html.message=<html>依赖项 <b>{0}</b> 为 {1}</html>
dependency.tree.package.text.message=依赖项 {0} 为 {1}
dependency.tree.popup.groupid=PackageChecker.Toolwindow.Tree.Popup
dependency.tree.select.dependency.message=选择左侧的依赖项可查看详细信息
dependency.tree.selecting.dependency=Loading details for {0}
dependency.usages.panel.content.name=用法
dependency.usages.panel.usages.string=项目文件中的用法
ignoreVulnerabilities.dialog.describeReason=描述\:
ignoreVulnerabilities.dialog.ignore=忽略
ignoreVulnerabilities.dialog.packageTitle=软件包\:
ignoreVulnerabilities.dialog.reasonTitle=原因\:
ignoreVulnerabilities.dialog.title=忽略易受攻击的软件包
ignoreVulnerabilities.ignoreReasons.fixedInBranch=固定在分支中
ignoreVulnerabilities.ignoreReasons.inProgress=处理中
ignoreVulnerabilities.ignoreReasons.notExploitable=不可利用
ignoreVulnerabilities.ignoreReasons.otherReasons=其他
ignoreVulnerabilities.optionPane.isIgnoringEnabled=忽略依赖项
ignoreVulnerabilities.optionPane.moduleColumn=模块
ignoreVulnerabilities.optionPane.packageColumn=软件包
ignoreVulnerabilities.optionPane.reasonColumn=理由
ignoreVulnerabilities.optionPane.title=忽略的依赖项
ignoreVulnerabilities.text=忽略易受攻击的 {0}
inspection.global.name=易受攻击的导入依赖项
inspection.group=Security
inspection.local.name=易受攻击的声明依赖项
inspection.message.vulnerable.api.usage=<html><body>易受攻击的 API 用法\n{0} 结果由 <a href\="https\://checkmarx.com">Checkmarx</a>(c)</body> 提供技术支持</html>
inspection.popup.footer=Powered by <a href\="https\://checkmarx.com">Checkmarx</a>
inspection.popup.header.multiple={0} vulnerabilities found in dependency\:
inspection.popup.header.single=Vulnerability found in dependency\:
inspection.popup.header.vulnerable.api.usage.multiple={0} vulnerabilities found in API call\:
inspection.popup.header.vulnerable.api.usage.single=Vulnerability found in API call\:
inspection.popup.show.all.hint=Show all {0}…
inspection.popup.show.details.hint=Show details…
inspection.popup.transitive.prefix=Transitive
inspection.problem=易受攻击的依赖项 {0}
inspection.template=<html><body> 依赖项 {0} 易受攻击 {1} 结果由 <a href\="https\://checkmarx.com">Checkmarx</a>(c)</body> 提供技术支持</html>
inspection.template.module.name=<br/>Module\: {0}
inspection.template.safe.version=, safe version {0}
inspection.template.tree=<br/>Tree\:<pre>{0}</pre>
inspection.transitive=<html><body> 提供可传递的易受攻击的依赖项 {0} {1} 结果由 <a href\="https\://checkmarx.com">Checkmarx</a>(c)</body> 提供技术支持</html>
inspection.usages.name=易受攻击的 API 用法
message.false.positive.content=已将依赖项 {1} 的漏洞 {0} 报告为误报
message.false.positive.title=误报报告
notification.dependency.checker.error.message.fail=Dependency Checker 无法检查依赖项中的漏洞。\n将使用本地漏洞缓存(可能不完整和/或过时)。\n请查看日志了解详细信息
notification.dependency.checker.error.message.jba.acoount=Dependency Checker 需要 JetBrains Account 才能工作
notification.dependency.checker.error.title=Dependency Checker 错误
notification.group.security=Package Checker 检查失败
problem.tab.emptyText=分析依赖项是否易受攻击
problem.tab.ignoreVulnerabilities=忽略软件包中的漏洞
problem.tab.name=易受攻击的依赖项
problem.tab.refreshAction=刷新
quick.fix.navigate.toSource=转到具有声明的依赖项的文件
show.info.quickfix=显示 {0} 的漏洞信息
show.info.quickfix.title={0} 的漏洞列表。结果由 Checkmarx (c) 提供技术支持
toolwindow.maintitle=易受攻击的依赖项
vulnerability.popup.step.text={0}\: {1}
