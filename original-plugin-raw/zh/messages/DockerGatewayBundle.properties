#Thu Jan 11 15:31:37 MSK 2024
Cannot.find.requirement.dependencies.inside.the.dev.container=在 Dev Container 内找不到所需依赖项\: {0}
DefaultGitHttpsGuiAuthenticator.dialog.checkbox.remember=记住
DefaultGitHttpsGuiAuthenticator.dialog.field.password=密码或令牌\:
DefaultGitHttpsGuiAuthenticator.dialog.field.password.validation=密码不能为空
DefaultGitHttpsGuiAuthenticator.dialog.field.username=用户名：
DefaultGitHttpsGuiAuthenticator.dialog.field.username.validation=用户名不能为空
DefaultGitHttpsGuiAuthenticator.dialog.ok.button=登录
DefaultGitHttpsGuiAuthenticator.dialog.title=登录 {0}
DevcontainersBackendSelectionDialog.progress.title.prepare.environment=准备环境
DevcontainersBackendSelectionDialog.title.select.backend=选择后端
DockerContainersSection.action.delete=删除
DockerContainersSection.action.start=开始
DockerContainersSection.action.starting.progress=正在启动…
DockerContainersSection.action.stop=停止
DockerContainersSection.action.stopping.progress=正在停止…
DockerContainersSection.cannot.find.recent.devcontainers=找不到最近的 Dev Container
DockerContainersSection.container.link=<a href\=''click''>{0}</a> ({1})
DockerContainersSection.deleting.progress=正在删除...
DockerCreateDevcontainerPanel.connected=已连接
DockerCreateDevcontainerPanel.connecting.to.docker=正在连接到 Docker…
DockerDeployDevcontainerProgressPanel.action.restart=重新启动
DockerDeployDevcontainerProgressPanel.cleanup=正在清理临时工作目录 ''{0}''…
DockerDeployDevcontainerProgressPanel.continue=继续
DockerDeployDevcontainerProgressPanel.environment.prepared=环境已准备就绪
DockerDeployDevcontainerProgressPanel.preparing.environment=正在准备环境…
DockerDeployDevcontainerProgressPanel.title=正在构建开发容器
DockerDevcontainerHostInitializer.dialog.title.cloning.git.repository.failed=Git 克隆错误
DockerDevcontainerHostInitializer.failed.dialog.button.cancel=取消
DockerDevcontainerHostInitializer.failed.dialog.button.retry=重试
DockerDevcontainerHostInitializer.failed.dialog.message.permission.denied.help.message=如果您使用的是 SSH Git URL，请将与您的 Git 仓库关联的私钥添加到本地 SSH 代理。\n\n 为此，请在您的本地机器上运行 ssh-add -k <path_to_your_key>，然后点击“重试”。\n\n 您可以使用 `ssh-add -l` 命令查看添加的密钥。
DockerDevcontainerPortsForwarder.auto.port.forward.label=该端口通过 Devcontainer 支持自动转发。
DockerDevcontainersRunLineMarkerContributor.performance.degradation.ok=继续
DockerDevcontainersRunLineMarkerContributor.performance.degradation.warning=在 Windows 和 macOS 上挂载源代码可能会导致性能下降。我们建议在容器内部使用源代码的克隆。
DockerGateway.close.button.text=关闭
DockerGateway.connecting=正在连接…
DockerGateway.devcontainer=Dev Container
DockerGateway.loading=正在加载…
DockerGateway.local=本地
DockerGateway.new.devcontainer=新建 Dev Container
DockerGateway.progress.title.creating.devcontainer=正在创建 Dev Container…
DockerGateway.removing.container=正在移除容器…
DockerGatewayConnectionProvider.gateway.to.devcontainer=Dev Container 的网关
DockerGatewayConnector.action.text=创建 Dev Container
DockerGatewayConnector.description=创建 Dev Container 并连接到环境
DockerGatewayConnector.title=Docker Dev Container
DockerGatewayRecentConnections.title=Dev Container
DockerSetupGitRepositoryAndSSHPanel.field.git.branch=Git 分支\:
DockerSetupGitRepositoryAndSSHPanel.field.git.repository=Git 仓库\:
DockerSetupGitRepositoryAndSSHPanel.forward=构建容器并继续
DockerSetupGitRepositoryAndSSHPanel.validation.git.url.can.not.be.empty=Git URL 不能为空
DockerSetupGitRepositoryAndSSHPanel.validation.prefixes=Git URL 应以 'git@'、'ssh\://git@' 或 'https\://' 开头
GitCloneHelper.legacy.image.tag.warning=使用镜像标记 ''{0}'' 运行具有 OpenSSH 版本 8.8.1 的帮助程序容器，并避免与您的计算机上的 OpenSSH 版本发生兼容性问题\: ''{1}''。我们建议将 OpenSSH 更新到最新版本。
GitCloneHelper.preparing=正在为 git 克隆准备帮助程序容器…
Ijent.initializing.remote.agent=正在初始化远程代理…
Ijent.trying.to.clone.with.https.url=正在尝试使用 https url {0} 进行克隆…
ManageDevcontainerBackendsDialog.empty.state=找不到后端
ManageDevcontainerBackendsDialog.ok.title=删除所选后端
ManageDevcontainerBackendsDialog.progress.title=正在删除后端…
ManageDevcontainerBackendsDialog.title=管理后端
ManagePreviousResourcesDialog.button.continue.without.reusing=继续而不重用
ManagePreviousResourcesDialog.button.create.unassociated.dev.container=创建未关联的 Dev Container
ManagePreviousResourcesDialog.button.reuse.selected.volumes=重用所选卷
ManagePreviousResourcesDialog.button.yes=是
ManagePreviousResourcesDialog.remove.previous.dev.container=是否移除之前的 Dev Container?
ManagePreviousResourcesDialog.reuse.volumes=重用卷
ManagePreviousResourcesDialog.reuse.volumes.text=已找到与 devcontainer.json 文件或用于构建 Dev Container 的仓库关联的卷。
ManagePreviousResourcesDialog.reuse.volumes.with.existing.dev.container.text=已找到与 devcontainer.json 文件或用于构建的仓库关联的 Dev Container。是否要删除它并重用所选卷?<br/><br/>或者，您可以保留现有的 Dev Container 并使用随机选择的 ID 创建一个不关联的 Dev Container。
ManagePreviousResourcesDialog.tag.reuse.cache.volume=重用缓存卷
ManagePreviousResourcesDialog.tag.reuse.cache.volume.popupDescription=如果该值为 false，则将移除旧卷并为此 Dev Container 创建一个新卷。
ManagePreviousResourcesDialog.tag.reuse.cache.volume.tooltip=通过与此卷关联的上一个 Dev Container 中的 IDE 缓存重用卷。
ManagePreviousResourcesDialog.tag.reuse.sources.volume=重用资源卷
ManagePreviousResourcesDialog.tag.reuse.sources.volume.popupDescription=如果该值为 false，则将移除旧卷并为此 Dev Container 创建一个新卷。
ManagePreviousResourcesDialog.tag.reuse.sources.volume.tooltip=通过与此卷关联的上一个 Dev Container 中的源重用卷。
Ssh.info.dialog.do.not.show.again=不再显示
Ssh.info.dialog.text=远程环境需要<a href\="https\://docs.docker.com/engine/reference/commandline/build/\#git-repositories">从 Git 仓库</a>构建 Dev Container 映像。\n\n提取仓库要求<a href\="https\://docs.github.com/en/authentication/connecting-to-github-with-ssh/using-ssh-agent-forwarding">将本地 SSH 代理转发</a>到远程服务器。
Ssh.info.dialog.title=配置 SSH 代理转发
SshAgent.done=完成
SshAgent.performing.ssh.add.k.command=正在执行 ssh-add -k 命令…
SshAgent.ssh.add.k.command.is.exited.with.exit.code=已完成，非零退出代码为 {0}。
action.Create.Dev.Container.CloneSources.text=创建 Dev Container 并克隆源…
action.Create.Dev.Container.MountSources.text=创建 Dev Container 并挂载源…
action.Dev.Container.ManageBackends.text=管理 Dev Container 后端
action.Dev.Container.ShowRecent.text=显示 Dev Container
group.Dev.Container.Actions.text=Dev Container
