DefaultGitHttpsGuiAuthenticator.dialog.checkbox.remember=记住
DefaultGitHttpsGuiAuthenticator.dialog.field.password=密码或令牌:
DefaultGitHttpsGuiAuthenticator.dialog.field.password.validation=密码不能为空
DefaultGitHttpsGuiAuthenticator.dialog.field.username=用户名：
DefaultGitHttpsGuiAuthenticator.dialog.field.username.validation=用户名不能为空
DefaultGitHttpsGuiAuthenticator.dialog.ok.button=登录
DefaultGitHttpsGuiAuthenticator.dialog.title=登录 {0}
DevcontainersBackendSelectionDialog.progress.title.prepare.environment=准备环境
DevcontainersBackendSelectionDialog.title.select.backend=选择后端
DockerContainersSection.action.delete=删除
DockerContainersSection.action.start=开始
DockerContainersSection.action.starting.progress=正在启动…
DockerContainersSection.action.stop=停止
DockerContainersSection.action.stopping.progress=正在停止…
DockerContainersSection.cannot.find.recent.devcontainers=找不到最近的开发容器
DockerContainersSection.container.link=<a href=''click''>{0}</a> ({1})
DockerContainersSection.deleting.progress=正在删除...
DockerDeployDevcontainerProgressPanel.action.restart=重新启动
DockerDeployDevcontainerProgressPanel.cleanup=正在删除临时工作目录 ''{0}''…
DockerDeployDevcontainerProgressPanel.continue=继续
DockerDeployDevcontainerProgressPanel.environment.prepared=环境已准备就绪
DockerDeployDevcontainerProgressPanel.preparing.environment=正在准备环境…
DockerDeployDevcontainerProgressPanel.title=正在构建开发容器
DockerDevcontainerHostInitializer.dialog.title.cloning.git.repository.failed=Git 克隆错误
DockerDevcontainerHostInitializer.failed.dialog.button.cancel=取消
DockerDevcontainerHostInitializer.failed.dialog.button.retry=重试
DockerDevcontainerHostInitializer.failed.dialog.message.permission.denied=权限被拒绝.
DockerDevcontainerHostInitializer.failed.dialog.message.permission.denied.help.message=如果您使用的是 SSH Git URL，请将与您的 Git 仓库关联的私钥添加到本地 SSH 代理。\n\n 为此，请在您的本地机器上运行 ssh-add -k <path_to_your_key>，然后点击“重试”。\n\n 您可以使用 `ssh-add -l` 命令查看添加的密钥。
DockerDevcontainerHostInitializer.progress.text.cloning.git.repository=正在克隆 Git 仓库…
DockerDevcontainerPortsForwarder.auto.port.forward.label=该端口通过 Devcontainer 支持自动转发。
DockerDevcontainersRunLineMarkerContributor.performance.degradation.ok=继续
DockerDevcontainersRunLineMarkerContributor.performance.degradation.warning=在 Windows 和 macOS 上挂载源代码可能会导致性能下降。我们建议在容器内部使用源代码的克隆。
DockerGateway.close.button.text=关闭
DockerGateway.connecting=正在连接…
DockerGateway.devcontainer=开发容器
DockerGateway.loading=正在加载…
DockerGateway.local=本地
DockerGateway.new.devcontainer=新建开发容器
DockerGateway.progress.title.creating.devcontainer=正在创建开发容器…
DockerGateway.removing.container=正在移除容器…
DockerGatewayConnectionProvider.gateway.to.devcontainer=开发容器的网关
DockerGatewayConnector.action.text=创建开发容器
DockerGatewayConnector.description=创建开发容器并连接到环境
DockerGatewayConnector.title=Docker 开发容器
DockerGatewayRecentConnections.title=开发容器
DockerSetupGitRepositoryAndSSHPanel.field.git.branch=Git 分支:
DockerSetupGitRepositoryAndSSHPanel.field.git.repository=Git 仓库:
DockerSetupGitRepositoryAndSSHPanel.forward=构建容器并继续
DockerSetupGitRepositoryAndSSHPanel.validation.git.url.can.not.be.empty=Git URL 不能为空
DockerSetupGitRepositoryAndSSHPanel.validation.prefixes=Git URL 应以 'git@'、'ssh://git@' 或 'https://' 开头
Ijent.initializing.remote.agent=正在初始化远程代理…
Ijent.trying.to.clone.with.https.url=正在尝试使用 https url {0} 进行克隆…
IjentGit.retry.dialog.cancel.action.description={0}\n\n取消后，构建将继续进行，并且在客户端连接到后端之后，将重复尝试克隆仓库。
ManageDevcontainerBackendsDialog.empty.state=找不到后端
ManageDevcontainerBackendsDialog.ok.title=删除所选后端
ManageDevcontainerBackendsDialog.progress.title=正在删除后端…
ManageDevcontainerBackendsDialog.title=管理后端
SshAgent.done=完成
SshAgent.performing.ssh.add.k.command=正在执行 ssh-add -k 命令…
SshAgent.ssh.add.k.command.is.exited.with.exit.code=已完成，非零退出代码为 {0}。
action.Create.Dev.Container.CloneSources.text=创建开发容器并克隆源...
action.Create.Dev.Container.MountSources.text=创建开发容器并挂载源...
action.Dev.Container.ManageBackends.text=管理开发容器后端
action.Dev.Container.ShowRecent.text=显示开发容器
group.Dev.Container.Actions.text=开发容器