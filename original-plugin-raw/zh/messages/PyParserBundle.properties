#Thu Jan 11 15:31:37 MSK 2024
PARSE.0.expected=应为 ''{0}''
PARSE.async.keyword.not.expected.here=此处不应为 'async' 关键字
PARSE.console.help.request.warn=IPython 内省语法错误
PARSE.console.multiline.magic.warn=多行魔术不能用作表达式
PARSE.declarator.should.be.empty=声明符应为空
PARSE.eq.expected=应为 '\='
PARSE.expected.@.or.def=应为 '@' 或 'def'
PARSE.expected.case.clause=应为 case 子句
PARSE.expected.colon=应为 '\:'
PARSE.expected.colon.or.rbracket=应为 '\:' 或 ']'
PARSE.expected.comma=应为 ','
PARSE.expected.comma.lpar.rpar=应为 ',' 或 '(' 或 ')'
PARSE.expected.comma.or.rpar=应为 ',' 或 ')'
PARSE.expected.ellipsis=应为 '…'
PARSE.expected.else=应为 'else'
PARSE.expected.expr.or.comma.or.bracket=应为表达式 ',' 或 ']'
PARSE.expected.expression=应为表达式
PARSE.expected.for.or.bracket=应为 ']' 或 'for'
PARSE.expected.formal.param.name=应为形参名称
PARSE.expected.fstring.colon.or.rbrace=应为 \: 或 '}'
PARSE.expected.fstring.quote=应为 {0}
PARSE.expected.fstring.rbrace=应为 '}'
PARSE.expected.fstring.type.conversion.or.colon.or.rbrace=应为类型转换、'\:' 或 '}'
PARSE.expected.identifier=应为标识符
PARSE.expected.in=应为 'in'
PARSE.expected.lpar=应为 '('
PARSE.expected.name=应为名称
PARSE.expected.name.or.wildcard=应为名称或 '_'
PARSE.expected.number=应为数字
PARSE.expected.pattern=应为模式
PARSE.expected.rbrace=应为 '}'
PARSE.expected.rbracket=应为 ']'
PARSE.expected.rpar=应为 ')'
PARSE.expected.statement.break=应为 break 语句
PARSE.expected.symbols=应为 ''{0}'' 或 ''{1}''
PARSE.expected.symbols.first.quotation=应为 ''{0}'' 或 {1}
PARSE.expected.symbols.second.quotation=应为 {0} 或 ''{1}''
PARSE.expected.tick=应为 '`' (反引号)
PARSE.expected.type.parameter=应为类型形参
PARSE.from.expected=应为 'from'
PARSE.function.return.type.annotations.py2=Python 2 不支持返回值类型注解
PARSE.function.type.annotations.py2=Python 2 不支持类型注解
PARSE.gt.expected=应为 '>'
PARSE.keyword.cannot.be.used.as.identifier.py2=''{0}'' 关键字不能在 Python 2 中用作标识符
PARSE.newline.expected=应为换行符
PARSE.single.star.parameter.not.supported.py2=Python 2 不支持仅带一个星号的形参
PARSE.string.literal=字符串文字
PARSE.string.literal.expected=应为字符串文字
can.t.assign.to.await.expression=无法赋值给 await 表达式
cannot.assign.to.yield.expression=无法赋值给 'yield' 表达式
custom.type.mimic.name=基于 {0} 的动态类
def.or.with.or.for.expected=应为 'def'、'with' 或 'for'
end.of.statement.expected=应为语句结束
except.or.finally.expected=应为 'except' 或 'finally'
expected.statement=应为语句
for.expected=应为 'for'
import.expected=应为 'import'
indent.expected=应缩进
rarrow.expected=应为 '->'
rbracket.or.comma.expected=应为 ']' 或 ','
statement.expected.found.0=应为语句，实际为 {0}
tuple.expression.expected=应为元组表达式
unexpected.expression.part=意外的表达式部分
unexpected.expression.syntax=意外表达式语法
unexpected.f.string.token=意外的 f-string 标记
unexpected.indent=意外缩进
unexpected.tokens=意外的标记
unindent.does.not.match.any.outer.indent=取消缩进不匹配任何外部缩进级别
value.expression.expected=应为值表达式
