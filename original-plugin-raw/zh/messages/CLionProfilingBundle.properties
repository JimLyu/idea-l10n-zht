action.Valgrind.ImportAction.text=导入 Valgrind XML 结果
action.Valgrind.SuppressAction.text=禁止
action.eventracer.add.new.profiles.text=将事件跟踪添加到 CMake 选项
action.eventracer.cant.work.with.preset=无法为基于预设的配置文件创建分析副本
action.eventracer.profile.already.contain.profiler=此配置文件已包含分析器选项
action.eventracer.profile.already.have.copy=配置文件已有一个带有分析器选项的副本: {0}
action.eventtracer.cant.found.profile=找不到配置文件
copy.error.with.stack.trace.to.clipboard.action.title=将带有堆栈的警告复制到剪贴板
dynamic.analysis.tools.configurable.name=动态分析工具
dynamic.analysis.tools.memcheck.border.title=Valgrind Memcheck
dynamic.analysis.tools.sanitizers.configurable.name=Sanitizers
dynamic.analysis.tools.valgrind.configurable.name=Valgrind
memory.profile.directory.label=目录:
memory.profile.file.label=文件:
memory.profile.function.label=函数:
memory.profile.import.title=正在导入 {0} 结果
memory.profile.instruction.pointer.label=指令指针:
memory.profile.line.label=行:
memory.profile.node.empty=<空>
memory.profile.object.label=对象:
memory.profile.panel.empty.preview=选择一个堆栈帧以获取更多信息
memory.profile.panel.frame.information.title=框架信息
memory.profile.panel.loading.preview.label=正在加载预览…
memory.profile.panel.preview.editor.title=预览编辑器
memory.profile.process.output.from.remote=正在远程处理 {0} 输出
memory.profile.warnings.count={0} 个{0,choice, 0#警告|1#警告|2#警告}
notification.group.sanitizers=Sanitizers
notification.group.valgrind=Valgrind
profiler.eventracer.googletrace.checking.files.to.existence=正在查找文件…
profiler.eventracer.googletrace.profiler.dump.parser.indicator.text=Google 事件跟踪: 解析文件
profiler.eventtracer.action.show.profiling.google.trace.info.text=打开
profiler.eventtracer.args=实参
profiler.eventtracer.cat=类别:
profiler.eventtracer.duration=持续时间:
profiler.eventtracer.error.format.on.parsing=解析错误: 文件不符合 Google 跟踪事件格式
profiler.eventtracer.error.incomplete.event=事件未完成: 无起点
profiler.eventtracer.error.incorrect.time=事件未完成: 无终点
profiler.eventtracer.error.on.parsing=解析跟踪文件时出错
profiler.eventtracer.error.on.reading=无法读取分析信息\n文件不存在
profiler.eventtracer.error.tree.on.parsing=构建进程树时出错
profiler.eventtracer.getting.profiling.info=正在解析分析信息
profiler.eventtracer.googletrace.profiler.dump.parser.provider=Google 跟踪转储
profiler.eventtracer.label.get.something.wrong.on.showing=出错了
profiler.eventtracer.name=名称:
profiler.eventtracer.no.event.selected.hover.and.select.event=选择事件以查看详细信息
profiler.eventtracer.notification.content.cmake.files.not.found.content=未找到分析输出文件。可能原因: CMake 错误结束、CMake 版本低于 3.18、指定路径无效。
profiler.eventtracer.notification.content.cmake.files.not.found.name=缺少 CMake 分析信息
profiler.eventtracer.notification.content.cmake.google.trace.format.profiling.info.found=已找到 CMake 分析信息。
profiler.eventtracer.pid=进程 ID:
profiler.eventtracer.progress.text.build.tree=正在构建树…
profiler.eventtracer.progress.text.start.parse=正在读取: {0}
profiler.eventtracer.resultlogger.deprecated.event=已弃用的事件
profiler.eventtracer.resultlogger.invalid.path.in.options=CMake 选项中的路径无效
profiler.eventtracer.resultlogger.missed.field=缺少字段
profiler.eventtracer.resultlogger.path.to.file=路径: {0}
profiler.eventtracer.resultlogger.profiler.output.not.found=未指定分析器输出路径
profiler.eventtracer.resultlogger.successful=分析已成功完成。未找到警告
profiler.eventtracer.resultlogger.unknown.parsing.warning=未知的解析警告
profiler.eventtracer.resultlogger.unknown.type=未知事件类型
profiler.eventtracer.resultlogger.warnings=警告:
profiler.eventtracer.resultlogger.wrong.type.of.field=字段类型错误
profiler.eventtracer.tid=线程 ID:
sanitizer.fatal.error.title=遇到了致命错误
sanitizers.compiler.min.version.supported=注: 要启用此功能，需要 Clang (>={0})或 GCC(>={1})
sanitizers.fatal.error.during.debug=LeakSanitizer 无法在 ptrace (strace、gdb 等)下工作
sanitizers.import.flags.button=从现有环境变量导入标志
sanitizers.llvmSymbolizer.notification.text=找不到 llvm-symbolizer。要通过导航获取堆栈跟踪，请将 *SAN_SYMBOLIZER_PATH 环境变量设置为指向 llvm-symbolizer 二进制文件，或确保 llvm-symbolizer 位于您的 PATH 中。
sanitizers.llvmSymbolizer.notification.title=Google Sanitizers
sanitizers.progress=程序正在运行…
sanitizers.runtime.flags.border.title=运行时标志
sanitizers.runtime.flags.hint=各工具解析相应环境变量中的选项
sanitizers.runtime.flags.hint.note=注意: log_path、stack_trace_format、print_summary、print_stacktrace 将被覆盖
sanitizers.set.detect.leaks.to.zero=设置 'detect_leaks=0'
sanitizers.tabTitle=Sanitizers
sanitizers.use.visual.representation.checkbox=为 Sanitizer 的输出使用视觉表示
valgrind.argument.hint=将自动添加以下实参: --tool=memcheck、--xml=yes、--xml-file=<file>、--gen-suppressions=all、<program>、程序实参和所有禁止文件
valgrind.configurable.add.suppression.files.label=添加禁止文件:
valgrind.configurable.executable.dialog.title=Valgrind 可执行文件路径
valgrind.configurable.executable.label=Valgrind 可执行文件:
valgrind.configurable.no.suppression.files=无禁止文件
valgrind.confugurable.analysisOptions.label=Memcheck 选项:
valgrind.ctest.invalid.trace.children.parameter=Valgrind 可能不会显示 CTest 执行的结果，因为 `--trace-children` 设置为 `no`。
valgrind.executor.description=使用 Valgrind 内存检查器分析所选配置
valgrind.executor.run.action=运行 Valgrind Memcheck
valgrind.executor.run.action.with.configuration=通过 Valgrind Memcheck 运行 {0}
valgrind.fileNotFound=找不到 Valgrind 可执行文件: ''{0}''<br><a href="">配置</a>
valgrind.no.debug.info.hint=未找到与文件相关的信息。请确保程序是在调试模式下构建的，以便能够导航到源代码。
valgrind.prepare.suppression.files=正在准备 Valgrind 禁止文件…
valgrind.progress=Valgrind 正在运行…
valgrind.sanitizers=Valgrind 在启用 Google Sanitizers 的情况下可能无法正常工作
valgrind.suppress.action.description=选择要添加禁止的文件
valgrind.suppress.action.title=选择禁止文件