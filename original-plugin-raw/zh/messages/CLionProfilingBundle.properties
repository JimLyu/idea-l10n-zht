action.eventracer.add.new.profiles.text=将事件跟踪添加到 CMake 选项
action.eventracer.cant.work.with.preset=无法为基于预设的配置文件创建分析副本
action.eventracer.profile.already.contain.profiler=此配置文件已包含分析器选项
action.eventracer.profile.already.have.copy=配置文件已有一个带有分析器选项的副本\: {0}
action.eventtracer.cant.found.profile=找不到配置文件
dynamic.analysis.tools.sanitizers.configurable.name=Sanitizers
notification.group.sanitizers=Sanitizers
profiler.eventracer.googletrace.checking.files.to.existence=正在查找文件…
profiler.eventracer.googletrace.profiler.dump.parser.indicator.text=Google 事件跟踪\: 解析文件
profiler.eventtracer.action.show.profiling.google.trace.info.text=打开
profiler.eventtracer.args=实参
profiler.eventtracer.cat=类别\:
profiler.eventtracer.duration=持续时间\:
profiler.eventtracer.error.format.on.parsing=解析错误\: 文件不符合 Google 跟踪事件格式
profiler.eventtracer.error.incomplete.event=事件未完成\: 无起点
profiler.eventtracer.error.incorrect.time=事件未完成\: 无终点
profiler.eventtracer.error.on.parsing=解析跟踪文件时出错
profiler.eventtracer.error.on.reading=无法读取分析信息。文件不存在。
profiler.eventtracer.error.tree.on.parsing=构建进程树时出错
profiler.eventtracer.getting.profiling.info=正在解析分析信息
profiler.eventtracer.googletrace.profiler.dump.parser.provider=Google 跟踪转储
profiler.eventtracer.label.get.something.wrong.on.showing=出了些问题
profiler.eventtracer.name=名称\:
profiler.eventtracer.no.event.selected.hover.and.select.event=选择事件以查看详细信息
profiler.eventtracer.notification.content.cmake.files.not.found.content=已为当前 CMake 配置文件启用分析，但未生成包含跟踪结果的 JSON 文件。请确保 CMake 版本为 3.18 或更高版本，正确指定 JSON 文件的路径，并且 CMake 未因错误而失败。
profiler.eventtracer.notification.content.cmake.files.not.found.name=缺少分析信息
profiler.eventtracer.notification.content.cmake.google.trace.format.profiling.info.found=找到 CMake 分析信息。
profiler.eventtracer.pid=进程 ID\:
profiler.eventtracer.progress.text.build.tree=正在构建树…
profiler.eventtracer.progress.text.start.parse=正在读取\: {0}
profiler.eventtracer.resultlogger.deprecated.event=已弃用的事件
profiler.eventtracer.resultlogger.invalid.path.in.options=CMake 选项中的路径无效
profiler.eventtracer.resultlogger.missed.field=缺少字段
profiler.eventtracer.resultlogger.path.to.file=路径\: {0}
profiler.eventtracer.resultlogger.profiler.output.not.found=未指定分析器输出路径
profiler.eventtracer.resultlogger.successful=解析已成功完成。未找到警告
profiler.eventtracer.resultlogger.unknown.parsing.warning=未知解析警告
profiler.eventtracer.resultlogger.unknown.type=未知事件类型
profiler.eventtracer.resultlogger.warnings=警告\:
profiler.eventtracer.resultlogger.wrong.type.of.field=字段类型错误
profiler.eventtracer.tid=线程 ID\:
sanitizer.fatal.error.title=遇到了致命错误
sanitizers.compiler.min.version.supported=注\: 要启用此功能，需要 Clang (>\={0})或 GCC(>\={1})
sanitizers.fatal.error.during.debug=LeakSanitizer 无法在 ptrace (strace、gdb 等)下工作
sanitizers.import.flags.button=从现有环境变量导入标志
sanitizers.llvmSymbolizer.notification.text=找不到 llvm-symbolizer。要通过导航获取堆栈跟踪，请将 *SAN_SYMBOLIZER_PATH 环境变量设置为指向 llvm-symbolizer 二进制文件，或确保 llvm-symbolizer 位于您的 PATH 中。
sanitizers.llvmSymbolizer.notification.title=Google Sanitizers
sanitizers.progress=程序正在运行…
sanitizers.runtime.flags.border.title=运行时标志
sanitizers.runtime.flags.hint=各工具解析相应环境变量中的选项
sanitizers.runtime.flags.hint.note=注意\: log_path、stack_trace_format、print_summary、print_stacktrace 将被覆盖
sanitizers.set.detect.leaks.to.zero=设置 'detect_leaks\=0'
sanitizers.tabTitle=Sanitizers
sanitizers.use.visual.representation.checkbox=为 Sanitizer 的输出使用视觉表示
