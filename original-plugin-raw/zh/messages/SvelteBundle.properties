action.SvelteCreateComponentAction.description=创建 Svelte 组件文件
action.SvelteCreateComponentAction.text=Svelte 组件
svelte.component=Svelte 组件
svelte.context.html=Svelte HTML
svelte.context.html.text=Svelte HTML 文本
svelte.create.component.title=新建 {0}
svelte.file.type.description=Svelte
svelte.inspection.unresolved.component.display.name=未解析的 Svelte 组件
svelte.name=Svelte
svelte.new.component.create=创建{0}{1}
svelte.parsing.await.is.not.closed={\#await} 未关闭
svelte.parsing.each.is.not.closed={\#each} 未关闭
svelte.parsing.error.as.expected=应为 as
svelte.parsing.error.expected.closing.brace=应为 )
svelte.parsing.error.expected.html.debug.render.const=应为 html、debug、render 或 const
svelte.parsing.error.invalid.block.name=块名称无效
svelte.parsing.error.missing=缺少 }
svelte.parsing.error.modifiers.are.not.allowed.here=此处不允许 @ 修饰符
svelte.parsing.error.unexpected.end.tag=意外的结束标记
svelte.parsing.error.unexpected.inner.tag=意外的内部标记
svelte.parsing.error.whitespace.not.allowed.after=@ 后不允许有空格
svelte.parsing.error.whitespace.not.allowed.after.with={0} 后不允许有空格
svelte.parsing.error.whitespace.not.allowed.here=此处不允许有空格
svelte.parsing.if.is.not.closed={\#if} 未关闭
svelte.parsing.key.is.not.closed={\#key} 未关闭
svelte.parsing.snippet.is.not.closed={\#snippet} 未关闭
svelte.service.configurable.service.disabled=已禁用
svelte.service.configurable.service.disabled.help=选择此选项可关闭 Svelte Language Server \\& TypeScript 插件。仅使用内部 IDE 检查。
svelte.service.configurable.service.group=Svelte 语言服务器
svelte.service.configurable.service.languageServerPackage=语言服务器软件包
svelte.service.configurable.service.lsp=已启用
svelte.service.configurable.service.lsp.help=选择此选项可在 Svelte 项目中使用 Svelte Language Server \\& TypeScript 插件。仍将使用内部 IDE 检查。
svelte.service.configurable.service.tsPluginPackage=TypeScript 插件软件包
svelte.service.configurable.title=Svelte
