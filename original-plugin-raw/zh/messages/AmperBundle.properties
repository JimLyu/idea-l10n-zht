Amper.ModuleJsonSchemaProvider.name=Amper 模块
Amper.ProjectJsonSchemaProvider.name=Amper 项目
Amper.TemplateJsonSchemaProvider.name=Amper 模板
Amper.annotator.unresolved.path.message=未解析的路径
Amper.group.name=Amper
Amper.intentions.convert.catalog.dependency=转换为已解析的依赖项
Amper.intentions.create.catalog.and.extract=创建版本目录并将此依赖项移至其中
action.Amper.AddFileAsAmperProject.text=添加为 Amper 项目
action.Amper.RemoveFileAsAmperProject.text=作为 Amper 项目移除
action.Amper.SyncProject.text=同步 Amper 项目
action.NewAmperFile.text=Amper 模块文件
advanced.setting.amper.download.sources=下载源代码
advanced.setting.amper.download.sources.description=在项目导入期间下载项目依赖项的源代码。选中此框后，需要进行项目同步才能下载源代码。
advanced.settings.amper=构建工具。Amper
amper=Amper
amper.build.failed=Amper 构建失败
amper.build.finished=Amper 构建已完成
amper.execution.name.build.project=构建 {0}
amper.fetching.versions=正在提取 Amper 版本
amper.hot-reload.action.run.development.app=运行开发应用程序
amper.hot-reload.confirm.dialog.cancel.button=取消
amper.hot-reload.confirm.dialog.ok.button=停止
amper.hot-reload.confirm.dialog.stop.application=是否停止应用程序?
amper.hot-reload.execution.name=运行 {0}
amper.hot-reload.on.save.action.name=重新加载组合
amper.hot-reload.one.development.app.dialog=有一个开发应用程序已在运行。是否将其停止?
amper.hot-reload.panel.agent.logs.title=代理日志
amper.hot-reload.panel.clean.button.description=清理组合
amper.hot-reload.panel.clean.button.title=清理组合
amper.hot-reload.panel.compiler.logs.title=编译器日志
amper.hot-reload.panel.reload.button.description=重新加载更改
amper.hot-reload.panel.reload.button.title=重新加载更改
amper.hot-reload.panel.retry.button.description=重试失败的组合
amper.hot-reload.panel.retry.button.title=重试失败的组合
amper.hot-reload.panel.runtime.logs.title=运行时日志
amper.hot-reload.panel.stop.button.description=停止应用程序
amper.hot-reload.panel.stop.button.title=停止应用程序
amper.inlays.overrides=Amper 重写提示
amper.inlays.overrides.description=为重写的配置属性提供 `has overrides` 提示。
amper.navigation.go.to.super.find.usages.title=重写值
amper.new.module=新建 Amper 模块
amper.new.module.android=Android 应用
amper.new.module.custom=自定义模块
amper.new.module.desktop=Compose 桌面应用程序
amper.new.module.ios=iOS 应用
amper.new.module.library=库
amper.template.group.name=Amper
build.progress=正在构建…
completion.platform.specific.settings={0} 平台特定的设置
element.description.version.catalog.alias=目录别名
element.description.version.catalog.version.ref=目录版本引用
formatter.align.properties.caption=对齐
formatter.align.properties.none=不对齐
formatter.align.properties.on.eq=等号上
formatter.align.properties.on.value=值上
formatter.objects.label=对象
formatter.space_after_eq.label='\=' 后
formatter.space_before_eq.label='\=' 前
formatter.space_within_braces.label=大括号
generate.keystore.background.progress.title=正在生成密钥库
generate.keystore.inspection.title=密钥库文件不存在\: {0}
generate.keystore.notifications.failure.button.title=打开日志
generate.keystore.notifications.failure.description=有关详细信息，请参阅日志
generate.keystore.notifications.failure.title=密钥库生成失败
generate.keystore.notifications.group.title=Amper
generate.keystore.notifications.success.description=已成功在 {0} 生成密钥库
generate.keystore.notifications.success.title=密钥库已成功生成
generate.keystore.quickfix.title.generate.properties=生成{0}
generate.keystore.quickfix.title.run.amper=运行 Amper 以生成密钥库文件
gutter.overridden.marker.name=被重写
gutter.override.marker.name=重写
gutter.override.marker.tooltip=从 ''{1}'' 重写值 ''{0}''
gutter.override.provider.name=Amper 配置重写
gutter.super.provider.name=Amper 配置重写
highlighter.action.text.go.to.overridden.values=转到被重写的值
inspections.android.quickfix.name=移除前缀
inspections.android.sdk.deprecated.prefix=已弃用的 Android SDK 版本前缀
inspections.android.version.at.least.min.sdk.quickfix=将 Android {0} 替换为版本 {1}
inspections.can.convert.to.catalog.version=可被转换为目录版本
inspections.can.convert.to.catalog.version.conflict=可转换为目录版本(改用版本 {0})
inspections.can.convert.to.catalog.version.no.conflict=可被转换为目录版本
inspections.can.convert.to.catalog.version.quickfix.conflict.change=转换为现有目录版本(版本 {0})
inspections.can.convert.to.catalog.version.quickfix.conflict.create=创建一个具有不同版本的新目录条目
inspections.can.convert.to.catalog.version.quickfix.no.conflict=转换为目录版本
inspections.can.extract.to.catalog.version=可以提取到版本目录中
inspections.can.extract.to.catalog.version.quickfix=在目录中创建新条目
inspections.compose.no.dependencies=Compose 已启用，但未添加任何 Compose 依赖项
inspections.duplicate.dependencies.outside.catalog=此依赖项直接在某些模块中引用。是否将其替换为目录引用?
inspections.duplicate.dependencies.outside.catalog.fix=将所有显式依赖项替换为目录条目
inspections.duplicate.dependencies.outside.catalog.fix.and.update.version=将所有显式依赖项替换为版本 {0} 的目录条目
inspections.duplicate.dependencies.outside.catalog.fix.only.matching=将版本 {0} 匹配的显式依赖项替换为目录条目
inspections.empty.module=没有源的空模块
inspections.empty.module.generate=生成示例模块结构
inspections.empty.module.generate.sample=生成示例{0}
inspections.incorrect.android.sdk.version=不正确的 Android SDK 版本
inspections.keystore.file.does.not.exist=密钥库文件不存在
inspections.module.dependency.unresolved.gradle.quickfix=将依赖关系声明转换为 Amper 格式
inspections.module.dependency.with.overridden.version.quickfix=将依赖项版本从 {0} 更新为 {1}
inspections.module.not.in.project=Amper 模块未在项目文件中注册
inspections.module.not.in.project.add.fix=向项目添加 Amper 模块
inspections.module.not.in.project.ignore.fix=不建议将此模块添加到项目中
inspections.no.build.backend.configured=Amper 未配置
intention.collapse.shorthand.form=收起为简短形式
intention.expand.shorthand.form=展开为完整形式
intentions.add.compose.dependencies.name=添加 Compose 依赖项
intentions.add.module=创建新的模块
intentions.add.template=创建新的 模板
intentions.choose.template=选择模板
intentions.configure.gradle.based.amper=配置基于 Gradle 的 Amper
intentions.configure.gradle.generate.wrapper=正在生成 Gradle 包装器文件
intentions.configure.pure.amper=配置独立 Amper
intentions.configure.pure.amper.multimodule=在父目录中配置多模块 Amper 项目
intentions.configure.pure.amper.project=在父目录中创建项目文件
intentions.configure.pure.amper.single=在当前目录中配置单模块 Amper 项目
intentions.create.source.and.test.folder=为 {0} 创建源文件夹和测试文件夹
intentions.create.source.folder=为 {0} 创建源文件夹
intentions.create.source.folder.name=创建源文件夹和测试文件夹
intentions.create.source.folder.with.subplatforms.name=创建共享的和平台特定的源文件夹和测试文件夹
intentions.create.test.folder=为 {0} 创建测试文件夹
intentions.enable.compose.name=启用 Compose 支持
intentions.fix.template.reference=将引用修正为 {0}
intentions.inline.template=内联模板
intentions.inline.template.all.usages=内联所有用法并移除模板
intentions.inline.template.cannot.resolve=无法解析模板
intentions.inline.template.current.usage=仅内联此用法
intentions.inline.template.header=内联模板
intentions.inline.template.nothing.to.inline=没有要内联的内容
intentions.move.to.template=移至模板
intentions.move.to.template.header=移至模板
intentions.move.to.template.new.template=创建新的 模板
intentions.remove.redundant.setting=移除冗余设置
intentions.remove.unresolved.glob=移除未解析的 glob
intentions.remove.unresolved.module=移除未解析的模块
intentions.remove.unresolved.template=移除未解析的模板
ios.run.configuration.execution.name=构建
ios.run.configuration.name=iOS 应用
jvm.app.module.yaml.template.group.name=module.yaml
notification.dumb.mode.navigation.to.overriding.methods=在静默模式下无法导航到重写值
notification.navigation.to.overriding.values=在索引更新期间无法导航到重写值
quickfix.add.dependency.on.module=添加对模块 ''{0}'' 的依赖
quickfix.add.dependency.on.module.choose=添加对模块的依赖…
quickfix.add.dependency.on.module.choose.module.to.add.dependency.on=选择要添加依赖关系的 Amper 模块
quickfix.add.dependency.on.module.writeCommandAction=添加对 Amper 模块的依赖
rename.template.with.suffix=重命名模板文件
sample.project.android=Android 应用
sample.project.cli=Java CLI 应用程序
sample.project.desktop=Compose 桌面应用程序
sample.project.ios=iOS 应用程序
settings.display.name=Amper
sync.model.progress.title=正在读取模型…
sync.progress.result.failed=已失败
sync.progress.title=Amper 导入
sync.project.modal.progress.title=正在导入项目…
sync.stage.external.dependencies.name=正在下载依赖项…
sync.stage.local.dependencies.name=正在解析依赖项…
sync.stage.post.configuration.name=正在执行后配置…
sync.stage.preview.name=预览
sync.stage.project.structure.name=正在配置项目…
sync.stage.read.model.name=正在配置项目…
