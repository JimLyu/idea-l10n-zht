action.EditCellWithAIAction.text=AI Edit Cell
action.FixCellWithAIAction.text=AI Fix Cell
action.JupyterAddCodeCellWithLLMAction.text=AI 代码
action.NotebookInsertCellAboveWithLLMAction.description=使用 LLM 在上方插入代码单元
action.NotebookInsertCellAboveWithLLMAction.text=AI 单元
action.NotebookInsertCellAboveWithLLMActionNew.description=使用 LLM 在上方插入代码单元
action.NotebookInsertCellAboveWithLLMActionNew.text=AI 单元
action.NotebookInsertCellBelowWithLLMAction.description=使用 LLM 在下方插入代码单元
action.NotebookInsertCellBelowWithLLMAction.text=AI 单元
action.OpenAutopilotActionWrapperAboveCell.text=AI
action.OpenAutopilotActionWrapperBelowCell.text=AI
autopilot.button.accept.and.run=接受并运行
autopilot.button.get.advice.from.ai=获取 AI 建议
autopilot.button.loading=正在加载…
autopilot.button.regenerate=重新生成
autopilot.cell.command.accept.result.code=Accept Result Code
autopilot.cell.command.replace.current.message.part=Revert Original Code
autopilot.cell.command.revert.original.code=Revert Original Code
autopilot.popup.title.ai.suggestions=AI 建议
autopilot.progress.title.getting.suggestions=正在从 AI Assistant 获取建议
autopilot.text.field.create.new.cell=Ask the assistant to create some code for you
autopilot.text.field.edit.cell=Ask the assistant how to edit this cell
autopilot.tooltip.close=关闭
autopilot.tooltip.settings=设置
autopilot.tooltip.suggestions=建议
insert.code.cell.below.command.name=插入带有代码段的新单元
intention.edit.cell.with.ai=编辑单元
intention.explain.cell.with.markdown=为单元生成 Markdown
intention.fix.error.in.cell.with.ai=修复单元中的错误
