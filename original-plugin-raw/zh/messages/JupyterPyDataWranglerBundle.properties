JupyterStringTransformationCondition.capitalize.first.character=将第一个字符大写
JupyterStringTransformationCondition.convert.to.lower.case=转换为小写
JupyterStringTransformationCondition.convert.to.upper.case=转换为大写
RoundType.ceil=向上取整
RoundType.floor=向下取整
RoundType.round=四舍五入取整
SkewedTransformationType.logarithmic=对数
SkewedTransformationType.square.root=平方根
action.DataWrangler.Jupyter.Code.Export.description=将生成的代码导出到单元
action.DataWrangler.Jupyter.Code.Export.text=在 {0} 中新建单元
action.DataWrangler.Jupyter.Notebook.Export.description=将生成的代码导出到新 Notebook
action.DataWrangler.Jupyter.Notebook.Export.text=新建 Notebook…
action.DataWrangler.Jupyter.Python.Script.Export.description=将生成的代码导出到新的 Python 文件
action.DataWrangler.Jupyter.Python.Script.Export.text=新建 Python 脚本…
action.DataWrangler.Jupyter.Show.description=在 Data Wrangler 中编辑表
action.DataWrangler.Jupyter.Show.text=在 Data Wrangler 中编辑
action.DataWrangler.TableFile.Show.description=在 Data Wrangler 中编辑表
action.DataWrangler.TableFile.Show.text=在 Data Wrangler 中编辑
action.DataWranglerPyTablePanel.Show.description=使用 Data Wrangler 打开或隐藏面板
action.DataWranglerPyTablePanel.Show.text=Data Wrangler
action.JupyterAddDataWranglerCellAction.description=在下方插入 Data Wrangler 单元
action.JupyterAddDataWranglerCellAction.text=添加 Data Wrangler 单元
action.JupyterConvertDataWranglerToCodeAction.description=将单元转换为代码单元
action.JupyterConvertDataWranglerToCodeAction.text=将单元转换为代码(_C)
data.wrangler.jupyter.command.changeType.description=修改列的类型
data.wrangler.jupyter.command.changeType.label=将列 {0} 的类型更改为 {1}
data.wrangler.jupyter.command.changeType.name=更改列的类型
data.wrangler.jupyter.command.drop.description.full=从数据帧中移除指定列
data.wrangler.jupyter.command.drop.name=拖放列
data.wrangler.jupyter.command.dropRows.description=删除一定范围内的行
data.wrangler.jupyter.command.dropRows.label=删除从 {0} 到 {1} 的行
data.wrangler.jupyter.command.dropRows.name=删除行
data.wrangler.jupyter.command.duplicates.description=删除列中的重复行
data.wrangler.jupyter.command.duplicates.description.full=根据 Jupyter-notebook Python 上下文中的指定列移除重复的行
data.wrangler.jupyter.command.duplicates.label=在 {1} 列中{0}
data.wrangler.jupyter.command.duplicates.name=移除重复项
data.wrangler.jupyter.command.encoding.description={0} 列的独热编码
data.wrangler.jupyter.command.encoding.name=独热编码分类变量
data.wrangler.jupyter.command.fillMissing.description=填充缺失值
data.wrangler.jupyter.command.fillMissing.label=使用 {1} 填充列 {0} 中的缺失值
data.wrangler.jupyter.command.fillMissing.name=填充缺失
data.wrangler.jupyter.command.filter.condition.equal=等于
data.wrangler.jupyter.command.filter.condition.greater=大于
data.wrangler.jupyter.command.filter.condition.greaterOrEqual=大于或等于
data.wrangler.jupyter.command.filter.condition.less=小于
data.wrangler.jupyter.command.filter.condition.lessOrEqual=小于或等于
data.wrangler.jupyter.command.filter.condition.notEqual=不等于
data.wrangler.jupyter.command.filter.description=带有条件\: {0} {1}
data.wrangler.jupyter.command.filter.description.full=此命令使用 Python 在 Jupyter Notebook 环境中根据指定的条件和值筛选表中所选列中的行
data.wrangler.jupyter.command.filter.label={0} {1} 列
data.wrangler.jupyter.command.filter.name=筛选
data.wrangler.jupyter.command.handleOutliersWithED.description=根据每个数据点与中心(平均值或中位数)的距离移除异常值
data.wrangler.jupyter.command.handleOutliersWithED.label=使用阈值为 {0} 的 ED 移除 {1} 中的异常值
data.wrangler.jupyter.command.handleOutliersWithED.name=使用欧几里得距离检测异常值
data.wrangler.jupyter.command.handleOutliersWithIQR.description=使用四分位距移除异常值
data.wrangler.jupyter.command.handleOutliersWithIQR.label=使用乘数为 {0} 的 IQR 移除 {1} 中的异常值
data.wrangler.jupyter.command.handleOutliersWithIQR.name=使用 IQR 的异常值检测
data.wrangler.jupyter.command.handleOutliersWithMAD.description=使用中位数移除异常值
data.wrangler.jupyter.command.handleOutliersWithMAD.label=使用阈值为 {0} 的 MAD 移除 {1} 中的异常值
data.wrangler.jupyter.command.handleOutliersWithMAD.name=使用 MAD 的异常值检测
data.wrangler.jupyter.command.handleSkewed.description=减少偏斜的转换
data.wrangler.jupyter.command.handleSkewed.label=列 {1} 中的 {0} 转换
data.wrangler.jupyter.command.handleSkewed.name=减少偏斜
data.wrangler.jupyter.command.init.description=创建新的 DataFrame 变量
data.wrangler.jupyter.command.init.label=复制 Python DataFrame 变量
data.wrangler.jupyter.command.minMax.description=使用 Min-Max 方法进行归一化
data.wrangler.jupyter.command.minMax.label=使用 min\={1} 和 max\={2} 对列 {0} 进行归一化
data.wrangler.jupyter.command.minMax.name=Min-Max 缩放
data.wrangler.jupyter.command.miss.description=删除列中缺少数据的行
data.wrangler.jupyter.command.miss.description.full=使用 Jupyter 和 Python 删除指定列中缺少值的行
data.wrangler.jupyter.command.miss.label=在 {1} 列中{0}
data.wrangler.jupyter.command.miss.name=删除缺失值
data.wrangler.jupyter.command.remove.description.full=从 Jupyter Notebook 中的表中移除包含空值的行
data.wrangler.jupyter.command.remove.name=移除具有 NaN 值的行
data.wrangler.jupyter.command.removeCols.description=移除多列
data.wrangler.jupyter.command.removeCols.label=移除列
data.wrangler.jupyter.command.removeCols.name=移除多列
data.wrangler.jupyter.command.replace.description=从 {0} 到 {1}
data.wrangler.jupyter.command.replace.description.full=动态字符串替换操作，可以使用完全匹配、区分大小写和正则表达式支持等参数进行微调，从而支持在 pandas DataFrame 中执行高级操作
data.wrangler.jupyter.command.replace.label=在 {1} 列中{0}
data.wrangler.jupyter.command.replace.name=查找并替换
data.wrangler.jupyter.command.round.description=将列 {1} 中的值四舍五入到小数点后 {0} 位
data.wrangler.jupyter.command.round.label=将列 {0} 中的数值四舍五入
data.wrangler.jupyter.command.round.name=将数值四舍五入
data.wrangler.jupyter.command.split.description=按分隔符拆分列
data.wrangler.jupyter.command.split.label=按分隔符 {1} 拆分列 {0}
data.wrangler.jupyter.command.split.name=拆分列
data.wrangler.jupyter.command.standardization.description=对数据进行转换，使其平均值为 0，标准差为 1
data.wrangler.jupyter.command.standardization.label=列 {0} 的 Z 分数归一化
data.wrangler.jupyter.command.standardization.name=Z 分数归一化
data.wrangler.jupyter.command.string.transform.description.full=对字符串进行简单的转换，例如大小写修改
data.wrangler.jupyter.command.string.transform.name=使用字符串转换列
data.wrangler.py.local.file.init.description=创建新的 DataFrame 变量
data.wrangler.py.local.file.init.label=将表数据导出到 DataFrame 变量
data.wrangler.py.local.file.init.name=创建 DataFrame
