action.Swagger.GenerateWireMockStubs.text=生成 WireMock 存根
action.WireMock.GenerateStub.text=生成 WireMock 存根
action.WireMock.RunThisFile.text=启动 WireMock 服务器
action.WireMock.ToggleHandlebars.description=为响应 `body` 和 `bodyFileName` 特性启用 Handlebars 模板
action.WireMock.ToggleHandlebars.text=使用 Handlebars 模板
action.WireMock.ToggleHandlebars.text.requires.plugin=使用 Handlebars 模板(需要 Handlebars 插件)
advanced.setting.wiremock.schema.detection.enabled=检测 JSON 架构
dialog.title.generating.stubs=正在生成 WireMock 存根…
generate.stubs.command.action=生成 WireMock 存根
run.configuration.codegen.validation.0.is.not.a.file=指定的“{0}”不是文件
run.configuration.codegen.validation.file.does.not.exist=指定的“{0}”不存在
run.configuration.codegen.validation.no.jdk=未找到 JRE
run.configuration.codegen.validation.unspecified.0.property=未指定“{0}”
run.configuration.jre.default=默认
run.configuration.jre.path=JRE
run.configuration.mappings.path=存根文件
run.configuration.mappings.path.dialog=存根文件
run.configuration.server.port=服务器端口
run.configuration.templatingEnabled=启用全局 Handlebars 模板化
run.configuration.templatingEnabled.description=使用 Handlebars 模板呈现响应
run.configuration.verbose=详细输出
wiremock.configurable=WireMock
wiremock.configurable.handlebars.enabled=在编辑器中使用 Handlebars 模板
wiremock.model.request=请求对象
wiremock.model.request.baseUrl=URL 直到路径开始的部分，例如 https\://my.example.com\:8080
wiremock.model.request.body=请求正文文本(避免使用非文本正文)
wiremock.model.request.bodyAsBase64=从 WireMock 3.8.0 开始，请求正文的 Base64 表示。
wiremock.model.request.cookies=Cookies 映射
wiremock.model.request.headers=标头映射
wiremock.model.request.host=URL 的主机名部分，例如 my.example.com
wiremock.model.request.id=每个请求的唯一 ID
wiremock.model.request.method=请求方法
wiremock.model.request.multipart=如果请求是多部分请求(布尔值)
wiremock.model.request.parts=多部分请求的各个部分通过模板模型公开
wiremock.model.request.path=URL 路径
wiremock.model.request.pathSegments=URL 路径段(零索引)
wiremock.model.request.port=端口号
wiremock.model.request.query=查询形参
wiremock.model.request.scheme=URL 的协议部分，例如 https
wiremock.model.request.url=URL 路径和查询
wiremock.run.description=API 模拟测试的服务器
wiremock.schema.detection.description=自动为定义了 WireMock 存根映射的文件指定 JSON 架构，以提供属性补全
wiremock.stubs.scratch.root=WireMock 存根
