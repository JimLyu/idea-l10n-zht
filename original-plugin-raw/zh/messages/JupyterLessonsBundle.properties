jupyter.onboarding.apply.split=点击“{0}”。
jupyter.onboarding.balloon.about.debug.panel=“{0}”工具窗口提供了一个带有各种调试操作的工具栏。
jupyter.onboarding.change.ui.settings=在本课次中，<ide/> 会将某些 UI 设置更改为默认状态。完成或退出课次后，将还原您的偏好设置。
jupyter.onboarding.confirm.package.installation=只需按 {0} 即可调用安装。
jupyter.onboarding.congratulations=恭喜\! 您已完成本课次。
jupyter.onboarding.debug.introduction=似乎遇到了执行错误。默认情况下，输出区域的回溯是折叠的。展开回溯可预览详细信息。我们来调试错误。
jupyter.onboarding.debugging.workflow.description=<strong>注意</strong>\: 函数定义及其调用位于不同的单元中。要在这种情况下执行调试，您需要首先运行所有单元(已完成)。接下来，您需要开始调试带有定义的单元。我们现在就开始吧。
jupyter.onboarding.finish.completion=确保选择了 {0} ，然后按 {1}。
jupyter.onboarding.fix.problem=您需要更正列名以修正检测到的错误。将 {0} (注意中间有连字符)替换为 {1} (需要下划线)。
jupyter.onboarding.insert.second.cell=现在，添加第二个单元。按 {0} 或点击“{1} {2}”按钮。
jupyter.onboarding.install.matplotlib=我们来安装 {0}。按 {1} 调用上下文操作。
jupyter.onboarding.install.pandas=<ide/> 会在编辑器中高亮显示错误和问题。红线表示您需要安装 {0} 软件包。将光标移至高亮显示的 {1} 单词上，然后按 {2}。
jupyter.onboarding.invoke.search.everywhere=您可以执行当前单元及其下面的所有单元。按两次 {0} 可查找必要的 IDE 操作。
jupyter.onboarding.lesson.name=熟悉 Jupyter
jupyter.onboarding.module.description=了解如何使用 Jupyter Notebook。
jupyter.onboarding.module.name=Jupyter
jupyter.onboarding.open.results.in.tool.window=您可以在输出区域中预览代码单元的执行结果。点击“{0}”，以在单独的工具窗口中打开数据帧。
jupyter.onboarding.press.run.below=选择所需项后按 {0}。请注意，还有几个其他包含 {1} 和 {2} 的操作，因此请确保选择正确的项。
jupyter.onboarding.rerun.all=现在，您可以重新运行已更正的单元了。点击“{0}”或按 {1}。
jupyter.onboarding.return.to.notebook=在此工具窗口中，您可以有更多的空间对数据进行深入探索。但现在，让我们回到 Notebook。按 {0} 关闭工具窗口。
jupyter.onboarding.right.click.for.split=我们将函数及其用法放在不同的单元中。点击右键并从上下文菜单中选择“{0}”。
jupyter.onboarding.run.and.select.below=我们来运行此单元，然后在下方添加另一个单元。我们可以通过“{0}”操作来实现\: 点击“{1}”或按 {2}。
jupyter.onboarding.run.first.sample=有一个为本课次创建的示例代码单元。按 {0} 运行。
jupyter.onboarding.second.cell.intro=我们来基于 Python 内核数据帧构建一些 matplotlib 图。第二个单元格缺少饼图所需的第一列的名称。
jupyter.onboarding.start.completion=您可以快速补全要包含在绘图中的列名称\: 开始输入 {0}，之后将显示补全列表。或者，您也可以按 {1} 并继续输入以缩短列表。
jupyter.onboarding.start.to.debug.call=现在，您可以调试包含函数调用的单元了。
jupyter.onboarding.start.typing.run.below=请记住 {0} 对话框。它可以帮助您在代码或 IDE 相关操作或设置中查找实体。只需开始输入 {1}。
jupyter.onboarding.third.cell.intro=接下来，我们来修改初始数据集并计算 Python 3.4 和 3.5 的平均内核数。
jupyter.onboarding.wait.indexing=现在 <ide/> 需要收集有关已安装软件包的数据，这应该需要一些时间。
jupyter.onboarding.wait.pandas.installation=等待软件包安装完毕。
