associated.contexts.key=关联上下文
associated.dependent.contexts.key=使用者
db.provider.generate.entity.by.table=生成持久性实体
db.provider.prompt.generate.entity.class.corresponding.to.table=您必须为 '{{'{0}'}}' 数据库表生成 Jakarta EE 持久性实体类。
directives.you.must.consider=必须考虑
directives.you.must.use=必须使用
domains.llm.function.controller.description=按名称返回控制器
domains.llm.function.entity.description=按名称返回实体
domains.llm.function.repository.description=按名称返回仓库
domains.llm.function.service.description=按名称返回服务
domains.llm.function.table.description=按名称返回表
entity.provider.generate.database.table.init.script.from.entity.class=生成数据库表初始化脚本
entity.provider.generate.repository.by.entity=生成 Spring Data 仓库
entity.provider.prompt.generate.init.sql.script=必须为 ID 类型为 ''{1}'' 的 ''{0}'' 实体生成初始 SQL 脚本
entity.provider.prompt.generate.spring.data.repository.for.entity=必须为 ID 类型为 '{{'{1}'}}' 的 '{{'{0}'}}' 实体生成 Spring Data 仓库。此仓库必须具有按实体特性搜索的方法。在 '{{'{2}'}}' 软件包中生成。
repositories.provider.generate.controller.by.repository=生成 Spring 控制器
repositories.provider.generate.spring.service.from.repository=生成 Spring 服务
repositories.provider.prompt.crud.spring.service.for.repository.0.class.and.1.as.entity=必须为仓库 '{{'{0}'}}' 类和 '{{'{1}'}}' 实体生成 CRUD Spring 服务
repositories.provider.prompt.generate.controller.for.repository=必须为 '{{'{0}'}}' 仓库类和 '{{'{1}'}}' 实体类生成 CRUD Spring 控制器。在 '{{'{2}'}}' 软件包中生成。
