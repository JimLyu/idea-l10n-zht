
toolwindow.notification.key=软件包管理器通知
vcpkg.toolwindow.package.not.selected=未选择软件包或源。悬停并选择软件包或源可查看信息.
vcpkg.toolwindow.task.install.vcpkg=安装 vcpkg
vcpkg.toolwindow.task.bootstrap.vcpkg=正在引导 vcpkg
vcpkg.toolwindow.task.clone.and.bootstrap.successful=克隆和引导成功
vcpkg.toolwindow.task.git.clone.failed=Git 克隆失败。原因:\n{0}
vcpkg.toolwindow.task.bootstrap.failed=引导失败。原因:\n{0}
wait.until.install.package.manager=正在等待安装软件包管理器
progress.title.checking.for.install=正在检查已安装的软件包管理器
label.checking.correctness.package.manager=正在检查软件包管理器的正确性
label.error.when.checking.package.manager.make.sure.path.correct.cloned.repository.lies.there.that.it.was.bootstrap=检查软件包管理器时出错。\n请确保路径正确，路径下存在克隆的仓库，并且仓库已引导
vcpkg.toolwindow.task.update.git.repository=正在更新 Git 仓库
vcpkg.toolwindow.task.update.git.repository.successful=Git 仓库更新成功
vcpkg.toolwindow.task.update.git.repository.failed=更新 Git 仓库失败。原因:\n{0}
vcpkg.toolwindow.task.update.packages=更新软件包
vcpkg.toolwindow.task.update.successful=更新成功。软件包可以更新:\n{0}
vcpkg.toolwindow.task.update.failed=更新失败。原因:\n{0}
vcpkg.toolwindow.task.upgrade.packages=正在升级软件包
vcpkg.toolwindow.task.upgrade.successful=更新成功。已更新软件包:\n{0}
vcpkg.toolwindow.task.upgrade.failed=升级失败。原因:\n{0}
vcpkg.indicator.task.label.install.package=正在安装 {0}
vcpkg.toolwindow.task.install.successful.top=安装成功。已安装的软件包:\n{0}
vcpkg.toolwindow.task.successful.more=和 {0} 个其他软件包
vcpkg.toolwindow.task.install.failed=安装失败。原因:\n{0}
vcpkg.indicator.task.label.remove.package=正在移除 {0}
vcpkg.toolwindow.task.remove.successful.top=移除成功。已移除的软件包:\n{0}
vcpkg.toolwindow.task.remove.failed=移除失败。原因:\n{0}
vcpkg.indicator.task.label.installed.find=正在搜索已安装的软件包
vcpkg.toolwindow.task.installed.successful=已成功加载的已安装软件包列表
vcpkg.toolwindow.task.installed.failed=已安装内容搜索失败。原因:\n{0}
vcpkg.indicator.task.label.search.package=正在搜索软件包
vcpkg.toolwindow.task.query.failed=搜索失败。原因:\n{0}
vcpkg.table.column.name=名称
vcpkg.table.column.version=版本
cmake.hints.view.window.name=将软件包激活插入 CMakeLists.txt
cmake.hints.view.action.name=将软件包激活插入 CMakeLists.txt
full.error.output.view.window.name=完整输出
full.error.output.view.action.name=打开完整输出
remove.package.manager.window.name=删除软件包管理器
remove.package.manager.window.want.to.remove=确定要移除此软件包管理器吗?
remove.package.manager.window.checkbox.delete.files=删除软件包管理器以及磁盘上的所有文件
manifest.manager.progress.title.vcpkg.json.modification=正在修改 vcpkg.json
vcpkg.toolwindow.button.install.package.name=安装
vcpkg.toolwindow.button.check.for.update.name=检查更新
vcpkg.toolwindow.button.check.for.update.description=检查 Git 仓库更新
vcpkg.toolwindow.button.update.repository.name=更新仓库
vcpkg.toolwindow.button.update.repository.description=检查当前版本的 vcpkg 是否可以从当前版本的 Git 仓库更新任何已安装的软件包。\n注意: 这并不能保证您获得最新版本的软件包，因为您还需要更新 Git 仓库以进行完整更新
vcpkg.toolwindow.button.upgrade.repository.name=升级仓库
vcpkg.toolwindow.button.upgrade.repository.description=为当前版本的 Git 仓库更新所有可以更新的软件包。\n注意: 这并不能保证您获得最新版本的软件包，因为您还需要更新 Git 仓库以进行完整更新
vcpkg.toolwindow.button.update.git.repository.name=更新 Git 仓库
vcpkg.toolwindow.button.update.git.repository.description=将 Git 仓库更新到最新版本
vcpkg.toolwindow.button.remove.repository.name=删除仓库
vcpkg.toolwindow.button.remove.repository.description=删除仓库。在卸载过程中，系统会要求您将其从 IDE 中删除，或者将其与磁盘上的文件一起删除。
vcpkg.toolwindow.package.triplet.no.triplets.found=未安装软件包
vcpkg.toolwindow.package.triplet.installed.triplets=已安装的三元组:
vcpkg.toolwindow.package.triplet.lets.cmake.decide=让 vcpkg 决定
vcpkg.toolwindow.task.check.for.update.label=正在检查更新
vcpkg.toolwindow.task.check.for.update.successful.can.be.updated=仓库可以更新
vcpkg.toolwindow.task.check.for.update.successful.updated=仓库已更新
vcpkg.toolwindow.task.check.for.update.failed=无法检查更新
toolwindow.not.selected.package.manager=未选择软件包管理器。请选择软件包管理器
toolwindow.button.new.package.manager.name=添加{0}
toolwindow.button.new.package.manager.description=添加新的软件包管理器
toolwindow.button.edit.package.manager.name=编辑
toolwindow.button.edit.package.manager.description=编辑选定的软件包管理器
vcpkg.toolwindow.task.start.package.manager=正在启动软件包管理器
vcpkg.toolwindow.task.start.package.manager.failed=无法启动软件包管理器
vcpkg.return.status.exit.code.is=使用代码 {0} 退出
vcpkg.return.status.failed.parse.result=解析失败
vcpkg.add.new.package.manager.window.name=添加 Vcpkg 软件包管理器
vcpkg.add.new.package.manager.field.name=名称:
vcpkg.add.new.package.manager.field.local.path=目录：
vcpkg.add.new.package.manager.field.url=URL:
vcpkg.registry.task.install.package.manager=安装 Vcpkg 注册表
vcpkg.registry.task.install.package.manager.successful=已成功创建注册表
vcpkg.registry.task.install.package.manager.failed=创建注册表失败
vcpkg.registry.task.get.baseline=获取基线
vcpkg.registry.add.new.package.manager.window.name=新的 Vcpkg 注册表软件包管理器
vcpkg.registry.add.new.package.manager.field.name=名称
vcpkg.registry.add.new.package.manager.field.local.path=本地路径
vcpkg.registry.task.install.package.manager.failed.ioexception=创建目录或访问目录时出现的问题
vcpkg.registry.task.install.package.manager.failed.streamwrite=创建或访问 JSON 文件时出现的问题
vcpkg.registry.task.check.for.install.package.manager.failed.ioexception=创建目录或访问目录时出现的问题
vcpkg.registry.task.check.for.install.package.manager.failed.securityexception=访问文件时出现的问题
toolwindow.problem.notification.profile.cant.found.toolchain=没有指定工具链形参路径
toolwindow.problem.notification.profile.cant.find.package.manager=工具链形参路径上没有软件包管理器
toolwindow.install.multiply.window.name=安装软件包
toolwindow.install.multiple.window.label.choose.one=从列表中选择一个软件包
toolwindow.install.multiply.window.notification.can't.find.package.manager=未找到软件包管理器的工具窗口内容
toolwindow.install.multiply.window.notification.broken.package.manager=安装过程中出错，当前软件包管理器不可用
toolwindow.install.multiply.window.task.find.packages=正在仓库中搜索软件包
vcpkg.toolwindow.table.splitter.installed=已安装
vcpkg.toolwindow.table.splitter.all=所有
vcpkg.add.new.package.manager.table.profile.already.enabled=(使用{0})
vcpkg.edit.package.manager.window.name=编辑 Vcpkg 软件包管理器
vcpkg.registry.edit.package.manager.window.name=编辑 Vcpkg 注册表软件包管理器
vcpkg.registry.configurator.task.name=Vcpkg 端口项目文件修改
toolwindow.problem.cmake.description=找不到软件包 {0}
toolwindow.problem.cpp.description=找不到文件 {0}
vcpkg.registry.edit.package.manager.loading.text=正在等待加载转换
vcpkg.registry.edit.package.manager.no.packages.to.add.text=没有要添加的软件包。
vcpkg.registry.edit.package.manager.no.packages.to.add.more=更多…
vcpkg.registry.edit.package.manager.row.version.name=版本
vcpkg.registry.edit.package.manager.version.name.already.exists=已存在使用此名称的基线
vcpkg.registry.edit.package.manager.row.name=名称
vcpkg.registry.edit.package.manager.failed.not.installed.package.manager.notification=无法编辑失败或未安装的软件包管理器
vcpkg.registry.edit.package.manager.table.name=名称
vcpkg.registry.edit.package.manager.table.version=版本
vcpkg.registry.edit.package.manager.table.add.to.registry=添加到注册表
vcpkg.registry.edit.package.manager.old.registry.get=旧版本
vcpkg.registry.edit.package.manager.old.registry.name=旧注册表版本
vcpkg.registry.edit.package.manager.old.registry.is.add=添加到当前项目
toolwindow.name=软件包管理器
remove.package.manager.window.task.remove.from.disk=正在从磁盘中删除文件
toolwindow.button.new.package.manager.button.name=添加新的软件包管理器
vcpkg.add.new.package.manager.name.of.triselect=将 vcpkg 集成添加到现有 CMake 配置文件
vcpkg.name=vcpkg
vcpkg.name.multiple=vcpkg 仓库
vcpkg.toolwindow.button.remove.package.name=删除
vcpkg.toolwindow.package.info.too.much.packages=如果存在大量选定的软件包，可能需要相当长的时间来安装或卸载。\n中断软件包的安装或删除可能会使仓库处于无法使用的状态
vcpkg.toolwindow.package.info.nothing.has.done=什么都没做
vcpkg.registry.edit.package.manager.no.packages.to.add.description=如需添加，需要在端口目录中添加一个带有软件包名称的目录，然后在此目录中添加一个包含此软件包版本的目录以及其中的 vcpkg.json 文件。
vcpkg.toolwindow.button.pull.and.update.name=拉取和更新
vcpkg.toolwindow.button.pull.and.update.description=更新 Git 仓库并更新 vcpkg
vcpkg.toolwindow.button.upgrade.all.name=全部升级
vcpkg.toolwindow.button.upgrade.all.description=更新 Git 仓库并升级 vcpkg
vcpkg.toolwindow.task.git.update.and.vcpkg.update=正在更新 Git 和 vcpkg
vcpkg.toolwindow.task.git.update.and.vcpkg.update.failed.git=Git 拉取失败。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update.failed.vcpkg=vcpkg 更新失败。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update.successful=Git 拉取和 vcpkg 更新成功。软件包可以更新:\n{0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade=Git 拉取和 vcpkg 升级
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.failed.git=Git 拉取失败。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.failed.vcpkg=vcpkg 更新失败。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.successful=Git 拉取和 vcpkg 更新成功。已更新软件包:\n{0}
vcpkg.add.new.package.manager.name.must.be.not.blank=名称不能为空
vcpkg.add.new.package.manager.path.must.be.not.blank=路径不能为空
vcpkg.add.new.package.manager.url.must.be.valid=URL 必须有效
vcpkg.add.new.package.manager.name.must.be.unique=名称必须唯一
vcpkg.add.new.package.manager.rename.package.manager=名称为的软件包管理器 {0} 被重命名为 {1}
vcpkg.toolwindow.package.triplet.action.remove.tooltip=删除软件包
vcpkg.toolwindow.package.triplet.action.upgrade.tooltip=升级软件包
vcpkg.toolwindow.package.triplet.name.and.version={0} ({1})
vcpkg.toolwindow.task.update.successful.no.packages=更新成功，没有要更新的软件包
vcpkg.toolwindow.task.upgrade.successful.no.packages=升级成功，没有要升级的软件包
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.successful.no.packages=Git 拉取和 vcpkg 升级成功，没有要更新的软件包
vcpkg.add.new.package.manager.path.already.exists=目录 {0} 已存在。其内容将被视为软件包管理器。
vcpkg.toolwindow.table.warning.not.updated=软件包可更新 ({0} -> {1})
vcpkg.toolwindow.table.warning.not.updated.no.version=<无版本>
vcpkg.registry.registry.info.edit=编辑注册表
vcpkg.registry.registry.info.delete=删除注册表
vcpkg.toolwindow.button.add.registry.name=添加注册表
vcpkg.toolwindow.button.add.registry.description=添加可用作个人仓库的注册表
toolwindow.problem.solve.by.installing.one.package.name=安装 {0}
toolwindow.problem.solve.by.installing.one.package.description={0}\n但此问题可以通过安装 {1} 来解决
toolwindow.problem.solve.by.installing.many.packages.name=查看候选项
toolwindow.problem.solve.by.installing.many.packages.description={0}\n但此问题可通过安装其中一个候选项来解决: {1}
toolwindow.problem.solve.by.installing.another.package.manager.install.new.name=安装 "{0}"
toolwindow.problem.solve.by.installing.another.package.manager.install.new.description={0}\n此问题可通过安装类型为 "{1}" 的软件包管理器来解决。安装时，必须选择所需的配置文件，以便该配置文件使用所需的软件包管理器
toolwindow.problem.solve.by.use.another.package.manager.name=使用"{0}"
toolwindow.problem.solve.by.use.another.package.manager.description={0}\n此问题可通过使用名为 "{1}" 的软件包管理器来解决。必须选择所需的配置文件，以便该配置文件使用所需的软件包管理器
vcpkg.add.new.package.manager.field.local.path.name.window=选择目录
manifest.manager.progress.title.modification.baseline.json=正在修改 baseline.json
manifest.manager.progress.title.modification.baseline.file=正在修改 {0} 基线文件
vcpkg.toolwindow.package.triplet.name=三元组:
vcpkg.add.new.package.manager.path.show.dialog=将在 {0} 中创建软件包管理器
manifest.manager.insert.to.vcpkg.configuration.json.action.name=插入到 vcpkg-configuration.json
manifest.manager.insert.to.vcpkg.json.action.name=将软件包放到 vcpkg.json
manifest.manager.remove.from.vcpkg.configuration.json.action.name=从 vcpkg-configuration.json 移除
manifest.manager.remove.from.vcpkg.json.action.name=从 vcpkg.json 移除软件包
manifest.manager.update.vcpkg.json=更新 vcpkg.json
vcpkg.registry.registry.info.registry.not.initialized=等待注册表初始化
vcpkg.registry.registry.info.error.on.get.status=Get 错误: {0}
vcpkg.registry.registry.info.add.new.package=添加 package
vcpkg.registry.registry.info.open.file=打开 {0}
vcpkg.registry.registry.info.create.file=创建{0}
vcpkg.registry.registry.info.create.file.progress.bar=创建{0}
vcpkg.registry.registry.info.loading.file.status=正在加载…
vcpkg.registry.registry.info.loading.file.progress.bar=正在加载文件
vcpkg.registry.task.check.for.install.failed=检查安装成功，但安装结果错误
vcpkg.registry.adding.package.wizard.window.name=Vcpkg 注册表新软件包
vcpkg.registry.adding.package.wizard.create.files.background.task=为软件包创建文件
vcpkg.registry.adding.packages.portfile.creating.cmakelists.must.exists=CMakeLists.txt 必须存在
vcpkg.registry.adding.packages.portfile.creating.directory.must.exists=目录必须存在
vcpkg.registry.adding.packages.create.new.package.loading.packages=正在加载软件包
vcpkg.registry.adding.packages.package.name=名称:
vcpkg.registry.adding.packages.package.name.comment=在搜索、安装和卸载软件包时将使用此名称
vcpkg.registry.adding.packages.package.name.must.be.not.empty=名称不能为空
vcpkg.registry.adding.packages.package.version=版本:
vcpkg.registry.adding.packages.package.already.exists=存在名称为 {0}、版本为 {1} 的软件包
vcpkg.toolwindow.button.settings.name=设置
vcpkg.toolwindow.button.settings.description=Settings for the package manager
vcpkg.toolwindow.package.info.vcpkg.json.loading=正在加载…
vcpkg.toolwindow.package.info.vcpkg.json.loading.task.name=Load vcpkg.json
vcpkg.toolwindow.package.info.vcpkg.json.install=Add to vcpkg.json
vcpkg.toolwindow.package.info.vcpkg.json.remove=从 vcpkg.json 移除
cmake.hints.view.window.ok.button.name=复制到剪贴板
vcpkg.toolwindow.button.auto.reload.cmake.after.install.name=Reload CMake after installing package
vcpkg.toolwindow.button.auto.reload.cmake.after.install.description=Automatically reload CMake after package is installed
cmake.auotreload.task.name=Reload CMake