action.CreateCypressE2ETest.description=创建新的 cypress E2E 测试
action.CreateCypressE2ETest.text=Cypress E2E 测试
create.new.cypress.project=创建一个新的 Cypress 项目
cy.codeInsight.inspection.commandNameDuplicate=命令重复
cy.codeInsight.inspection.commandSubject=Cypress 命令主题验证
cy.codeInsight.inspection.commandWithoutDeclaration.name=没有声明的 Cypress 命令
cy.codeInsight.inspection.commandsSignatureCheck.name=Cypress 命令签名检查
cy.codeInsight.inspection.group.name=Cypress
cy.codeInsight.inspection.illegalThis.message=使用 `this.*` 作为属性访问别名在箭头函数中不起作用。
cy.codeInsight.inspection.illegalThis.name=非法的别名引用
cy.codeInsight.inspection.multipleOverwrite=多次覆盖 cypress 命令
cy.codeInsight.inspection.overrideNotBuiltIn=覆盖非内置 cypress 命令
cy.codeInsight.inspection.replaceWithCyGet.fix.message=将 `this.alias` 替换为 `cy.get(alias)`
cy.codeInsight.inspection.unresolvedAlias.message=找不到 {0} 别名声明
cy.codeInsight.inspection.unresolvedAlias.name=未解析的 Cypress 别名
cy.codeInsight.inspection.unusedAlias.fix.message=移除未使用的别名
cy.codeInsight.inspection.unusedAlias.message=别名 {0} 未使用
cy.codeInsight.inspection.unusedAlias.name=未使用的 Cypress 别名
cy.codeInsight.unresolved.xpath.message=未解析的命令。未安装 Cypress XPath 插件。
cy.inspections.subjectValidation.mismatchedSubject=命令 `{0}` 需要 {1} 作为前一个主题，但 {2} 传递自 `{3}` 命令
cy.inspections.subjectValidation.unsafeSubject=在 `{0}` 命令之后链接更多命令不安全。\n请考虑拆分此命令链。
cypress.alias=Cypress 别名
cypress.codeGeneration.new.E2E.dialog.title=新 Cypress E2E 测试
cypress.codeInsight.alias.presentation=Cypress 别名 {0}
cypress.command=Cypress 命令
cypress.generation.of.definition.command.name=Cypress 命令 TypeScript 定义的生成
cypress.generation.of.interface.command.name=用于添加 Cypress 命令定义的 Cypress 可链接接口的生成
cypress.go.to.command.implementation=转到命令实现
cypress.go.to.command.type.definition=转到命令类型定义
cypress.inlay.hints.command.usages.text={0,choice, 0\#无用法|1\#1 个用法|2\#{0,number}'{1,choice, |1\#+}' 用法}
cypress.inspection.message.no.ts.declaration=此命令缺少 TS 声明。
cypress.inspection.message.no.ts.declaration.quickfix=创建缺少的 TypeScript 声明。
cypress.name=Cypress
cypress.notification.command.file.created=将创建默认命令文件 <code>cypress/support/index.d.ts</code><br/>您可以在设置中对其进行修改
cypress.notification.open.settings=打开 Cypress 设置
cypress.notifications.group.name=Cypress
cypress.projectWizard.add.examples=添加示例代码
cypress.projectWizard.choose.frontend.framework=框架\:
cypress.projectWizard.configure.component.tests=配置组件测试
cypress.projectWizard.configure.e2e.tests=配置 E2E 测试
cypress.projectWizard.configure.your.e2e.test.here.comment=在此处配置您的 E2E 测试
cypress.projectWizard.following.packages.will.be.installed=将添加以下附加依赖项\: {0}
cypress.projectWizard.toggle.breakpoint=按 {0} 切换断点。
cypress.projectWizard.use.breakpoint=按 {0} 调试测试
cypress.projectWizard.welcome.run.all.tests=按 {0} 或点击装订区域中的绿色图标运行所有测试
cypress.projectWizard.welcome.search.everywhere.hint=提示\: 按 {0} 随处搜索类、文件、测试、操作和设置。
cypress.settings.codeInsight=Cypress 代码洞察
cypress.settings.command.declarations=用于存储自定义命令的 TS 声明的 TypeScript 文件
cypress.settings.commands.file.error=请选择当前项目中的 TS 文件<br/>Cypress 建议使用 <code>projectDir/cypress/support/index.d.ts</code>
cypress.template.group.name=Cypress
inspection.message.command.command.name.duplicate=名称为 ''{0}'' 的命令已存在
inspection.message.command.not.built.in.command.cannot.be.overwritten=命令 ''{0}'' 不是内置命令，无法覆盖
inspection.message.command.overwritten.multiple.times.this.may.lead.to.unexpected.behaviour=命令 ''{0}'' 被多次覆盖。这可能会导致意外行为
