create.tooltip.no.targets=沒有合適的目標
action.new.file.creation=建立新檔案
create.directory.failed=無法建立目錄
create.directory.failed.message=無法建立目錄 ''{0}''!
create.error.files.in.directory=無法在目錄 ''{1}'' 中建立檔案 ''{0}''
create.field.name=名稱(&N):
create.error.invalid.name=名稱 ''{0}'' 無效
create.error.missing.target.dir=未找到目標目錄
create.error.dir.exists=名稱為 ''{0}'' 的目錄已存在
create.error.file.exists=名稱為 ''{0}'' 的檔案已存在
create.folder.dialog.title=選擇目標目錄
create.folder.dialog.description=選擇目標目錄
create.field.location=目錄(&F):
create.tooltip.arrows.type=在編輯器中按向上或向下箭頭可更改類型
action.create.new.file=新增 {0}
create.field.type=類型(&P):
fileExtensions.noCompatibleTypes=未找到相容的檔案類型
fileExtensions.editFileTypesTooltip=編輯檔案類型
fileExtensions.tabName=新檔案副檔名
fileExtensions.no.extensions=無副檔名
fileExtensions.error=錯誤
fileExtensions.noExtensionsError=請定義至少一對副檔名對
fileExtensions.extensionPair=副檔名對
fileExtensions.sourceExtension=源副檔名:
fileExtensions.headerExtension=頭副檔名:
fileExtensions.fileNamingConvention=檔案命名約定:
create.cpp.source.title=C/C++ 原始檔
create.cpp.header.title=C/C++ 標頭檔
create.checkbox.source.associated.header=建立關聯頭(&H)
create.cpp.class.title=C++ 類別
create.cpp.class.description=建立新的 C++ 類別
create.cpp.class.dialog.title=新增 C++ 類別
create.checkbox.cpp.class.header=僅建立頭(&H)

create.cpp.qt.ui.class.title=Qt UI 類別
create.cpp.qt.ui.class.description=使用 Qt Designer 表單檔案建立新的 Qt 類別
create.cpp.qt.filename.base.title=檔名庫:
create.cpp.qt.ui.invalid.parent.message=父類別名無效
create.cpp.qt.parent.class.title=父類別:
create.cpp.qt.custom.class.title=自訂類別

usage.class.predeclaration=類別預宣告
usage.in.declaration=宣告或預宣告中的用法
usage.in.expression=表達式中的用法
usage.in.macro.arguments.list=巨集實參列表中的用法
usage.in.macro.substitution=巨集取代中的用法
usage.in.property.attribute=屬性特性中的用法
usage.in.synthesize.statement=synthesize 語句中的用法
usage.in.template.argument.list=模板實參列表中的用法
usage.in.using.statement=using 語句中的用法
usage.member.access=成員存取
usage.message.receiver=訊息接收器
usage.method.call=方法呼叫
usage.namespace.qualifier=命名空間限定符
usage.parameter.declaration=參數宣告
usage.protocol.predeclaration=協議預宣告
usage.protocol=協議引用
usage.qualifier=限定符
usage.selector.expression=選擇器表達式
usage.superclass=超類別引用
usage.variable.declaration=變數宣告

objective.c=Objective-C
c.cpp=C/C++
inspection.unused.code=未使用的程式碼
language.cpp.configurable.name=C/C++
inspection.general=一般
create.cpp.enclosing.namespace.title=命名空間:
create.cpp.invalid.namespace.name.message=命名空間名稱無效
create.cpp.module.title=C++ 模組接口單元
fileExtensions.moduleExtension=Module Extension: