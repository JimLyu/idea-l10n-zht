displayname.replace.project.with.project.in=將 Project() 取代為 project.in()
displayname.sbt=sbt
downloading.list.of.templates=正在下載模板列表…
downloading.template=正在下載模板…
group.sbt=sbt
initializing.sbt.shell.message=正在初始化 sbt shell…
packagesearch.dependency.version.inspection.description=庫相依項有較新的穩定版本
packagesearch.newer.stable.version.available={0}:{1} 有較新的穩定版本
packagesearch.update.dependency.to.newer.stable.version=將相依項更新到較新的穩定版本 {0}
sbt.annotation.blankLineRequired=在 0.13.7 版(您的版本是 {0})以前的 *.sbt 檔案中，需要用空行來分隔表達式
sbt.annotation.expectedExpressionType=sbt 檔案中預期的表達式類型為 Def.SettingsDefinition
sbt.annotation.expectedExpressionTypeSbt0136=sbt 檔案中預期的表達式類型為 DslEntry
sbt.annotation.expressionMustConform=表達式類型 {0} 必須符合 sbt 檔案中的 Def.SettingsDefinition
sbt.annotation.expressionMustConformSbt0136=表達式類型 {0} 必須符合 sbt 檔案中的 DslEntry
sbt.annotation.sbtFileMustContainOnlyExpressions=sbt 檔案只能包含表達式
sbt.based.scala.project.recommended=基於 sbt 的 Scala 專案(推薦)
sbt.build.file.changes=sbt 建置檔案更改
sbt.build.file.modification=sbt 建置檔案修改
sbt.build.modified.automatically=已自動修改
sbt.build.modified.automatically.and.fixed.manually=已自動修改和手動修正
sbt.build.modified.detected=已檢測
sbt.build.modified.manually=已手動修改
sbt.build.modified.unexpected.file.status=意外的建置檔案狀態: {0}
sbt.build.module.description=sbt 模組用於標記內容根，並為 sbt 專案定義提供庫
sbt.build.module.name=sbt 模組
sbt.commands=sbt 指令
sbt.disable.notification=停用通知
sbt.download.sbt.sources=下載 sbt 原始碼(對於編輯專案定義很有用)
sbt.download.scala.standard.library.sources=下載 Scala 標準庫原始碼(對於編輯原始碼很有用)
sbt.events=事件
sbt.extracting.project.structure.from.sbt=正在從 sbt 提取專案結構
sbt.extracting.project.structure.from.sbt.shell=正在從 sbt shell 提取專案結構
sbt.fix.refreshProject=重新整理專案
sbt.fix.updateIndexes=更新專案解析器的索引
sbt.import.cancelled=sbt 匯入已取消: {0}
sbt.import.error=匯入 sbt 專案時出錯: <br/><pre>{0}</pre>
sbt.import.errors.project.reload.aborted=發生匯入錯誤，已中止專案重新載入
sbt.import.extracting.structure.failed=提取結構失敗
sbt.import.message.build.status=建置狀態: {0}
sbt.import.message.structure.file.is.empty=結構檔案 {0} 為空
sbt.import.message.structure.file.is.not.a.file=結構檔案 {0} 不是檔案
sbt.import.noCustomJvmFound=無法確定所選 JDK 中的 Java VM 可執行檔案
sbt.import.noProjectJvmFound=無法確定當前專案 SDK 中的 Java VM 可執行檔案
sbt.import.to.intellij.project.model=匯入到 IntelliJ 專案模型
sbt.import.unresolvedDependencies=未解析的相依項: <ul>{0}</ul>請參閱 <a href="{1}">{1}</a> 中的完整日誌
sbt.inspection.projectIn.name=將 Project() 取代為 project.in()
sbt.launcher.not.found=在 {0} 中找不到 sbt 啟動器
sbt.local.cache=本地快取
sbt.module.step.download.sources=下載源
sbt.named.sbt.commands.defined.in.this.project=此專案中定義的命名 sbt 指令
sbt.notification.will.be.disabled.for.all.projects=將對所有專案停用通知\n\
使用“設定 | 外觀與行為 | 通知 | {0}”\n\
可以組態通知。
sbt.notificationGroupName=sbt
sbt.notificationGroupTitle=sbt 匯入
sbt.project.description=sbt 專案
sbt.project.import=sbt 專案匯入
sbt.project.long.description=由 sbt 支援的專案
sbt.project.structure.extracted=已提取專案結構
sbt.runner.choose.working.directory=選擇工作目錄
sbt.runner.description=執行 sbt 任務
sbt.runner.displayName=sbt 任務
sbt.runner.form.environmentVariables=環境變數:
sbt.runner.form.tasks=任務:
sbt.runner.form.tasksEditorTitle=任務
sbt.runner.form.use.sbt.shell=使用 sbt shell
sbt.runner.form.vmParameters=虛擬機參數:
sbt.runner.form.vmParametersEditorTitle=虛擬機參數
sbt.runner.form.working.directory=工作目錄:
sbt.settings=sbt 設定
sbt.settings.allowSbtVersionOverride=允許覆寫 sbt 版本
sbt.settings.allowSbtVersionOverride.tooltip=如果 sbt 相容版本比專案 build.properties 中組態的版本新，則使用最新相容版本的 sbt 執行 sbt shell。允許 sbt shell 整合利用較新的功能和修正
sbt.settings.bundled=已捆綁(&B)
sbt.settings.choose.custom.launcher=選擇自訂啟動器
sbt.settings.choose.sbt.launch.jar=選擇 sbt-launch.jar
sbt.settings.custom.launcher=自訂(&U)
sbt.settings.defined.in.this.project=此專案中定義的 sbt 設定
sbt.settings.download=下載:
sbt.settings.implicitImports=隱式 import
sbt.settings.jvm=JVM
sbt.settings.maxHeapSize=最大堆大小(MB)
sbt.settings.noImplicitImportsFound=找不到隱式 import
sbt.settings.project.jdk="專案 JDK:"
sbt.settings.remoteDebug=啟用偵錯
sbt.settings.remoteDebug.tooltip=以可偵錯的程序啟動 sbt shell。允許偵錯 sbt 延伸模組程式碼和 sbt shell 中執行的測試
sbt.settings.resolveClassifiers=庫原始碼
sbt.settings.resolveClassifiers.tooltip=從 sbt 重新載入專案時下載專案庫相依項的源
sbt.settings.resolveSbtClassifiers=sbt 原始碼
sbt.settings.resolveSbtClassifiers.tooltip=從 sbt 重新載入專案時下載 sbt 和 sbt 延伸模組的源
sbt.settings.resolvers=解析器
sbt.settings.resolvers.name=名稱
sbt.settings.resolvers.url=URL
sbt.settings.sbt=sbt(&S):
sbt.settings.sbtLauncher=啟動器(sbt-launch.jar)
sbt.settings.sbtModuleSettings=sbt
sbt.settings.sbtVersionInModule=sbt 版本
sbt.settings.sbtVersionNotDetected=未檢測
sbt.settings.scala=Scala(&C):
sbt.settings.scalaVersionPreference=開啟交叉編譯 Scala 3 / Scala 2 專案為:
sbt.settings.scalaVersionPreference.tooltip=針對 Scala 2 和 Scala 3 交叉編譯的專案實際上並不使用 Scala 3 功能，且可以作為 Scala 2 (更可靠)開啟。
sbt.settings.shell.title=sbt shell
sbt.settings.useShell=用於:
sbt.settings.useShellForBuild=構建版本
sbt.settings.useShellForBuild.tooltip=在 sbt shell 中建置專案。推薦用於 sbt 建置組態，這些組態會導致在 IntelliJ IDEA 編譯器中的編譯工作無法正常進行
sbt.settings.useShellForImport=專案重新載入
sbt.settings.useShellForImport.tooltip=專案從 sbt shell 而不是新的 sbt 程序中重新載入。這樣可以減少重新載入時間，但需要 sbt shell 才能留在記憶體中
sbt.settings.vmParams=虛擬機參數
sbt.shared.source.module.description=在編譯期間，某個共享原始碼模組的相依項混入模組原始碼而不是模組輸出中
sbt.shared.sources.module=共享原始碼模組
sbt.shell.action.help=幫助
sbt.shell.action.help.description=在 sbt shell 中獲取幫助
sbt.shell.action.inspect.setting=檢查
sbt.shell.action.inspect.setting.description=在 sbt shell 中檢查設定
sbt.shell.action.inspect.task=檢查
sbt.shell.action.inspect.task.description=在 sbt shell 中檢查任務
sbt.shell.action.run.command=執行
sbt.shell.action.run.command.description=在 sbt shell 中執行指令
sbt.shell.action.run.task=執行
sbt.shell.action.run.task.description=在 sbt shell 中執行任務
sbt.shell.action.show.setting=顯示值
sbt.shell.action.show.setting.description=在 sbt shell 中顯示設定
sbt.shell.action.show.task=顯示結果
sbt.shell.action.show.task.description=在 sbt shell 中顯示任務結果
sbt.shell.attach.debugger=將偵錯器附加到 sbt shell
sbt.shell.build.interrupted=建置已中斷
sbt.shell.configure.project.jdk=組態專案 JDK(&C)
sbt.shell.configure.sbt.jvm=組態 sbt JVM(&C)
sbt.shell.ctrl.d.eof=Ctrl+D EOF
sbt.shell.debug=偵錯 sbt shell
sbt.shell.disable.version.override=停用版本覆寫
sbt.shell.enable.debugging.in.sbt.settings=在 sbt 設定中啟用 sbt shell 偵錯，並重啟 shell 以附加偵錯器
sbt.shell.error.build.interrupted=錯誤: 建置已中斷
sbt.shell.errors.in.build=建置中存在錯誤
sbt.shell.execute.task=執行 {0}
sbt.shell.no.jre.found.at.path=在路徑 {0} 中找不到 JRE。改用專案 JDK。
sbt.shell.no.project.jdk.configured=未組態專案 JDK，但必須組態才能執行 sbt shell。
sbt.shell.refresh.sbt.project=重新整理 sbt 專案
sbt.shell.restart=重啟 sbt shell
sbt.shell.sbt.build=sbt 建置
sbt.shell.sbt.build.failed=sbt 建置失敗
sbt.shell.start=啟動 sbt shell
sbt.shell.started.sbt.shell.with.sbt.version=已使用 sbt 版本 {0} 而不是專案組態的 {1} 啟動 sbt shell。
sbt.shell.status.busy=繁忙
sbt.shell.status.initializing=正在初始化
sbt.shell.stop=停止 sbt shell
sbt.shell.synchronizing.output.directories=正在同步輸出目錄…
sbt.shell.title=sbt shell
sbt.shell.unable.to.build.sbt.project=無法建置與 IDEA 模組 {0} 相對應的 sbt 專案。
sbt.shell.update.sbt.version=更新 sbt 版本
sbt.shell.warnings.in.build=建置中存在警告
sbt.sincesbtversion.required=需要 sbt {0}+。請更新專案 build.properties。
sbt.task.canceled=任務已取消
sbt.task.failed.see.log.for.details=sbt 任務失敗，請參閱日誌以了解詳細資訊
sbt.tasks=sbt 任務
sbt.tasks.defined.in.this.project=此專案中定義的 sbt 任務
sbt.techhub.downloading.location=正在下載 {0}
sbt.techhub.lightbend.project.starter=Lightbend 專案啟動器
sbt.techhub.no.response.status.from.connection.to.url={0} 連線無響應狀態
sbt.techhub.response.to.connection.to.url.was.status={0} 連線的響應為 ''{1}''
sbt.techhub.sbt.based.project.from.a.lightbend.tech.hub.template=Lightbend Tech Hub 模板中基於 sbt 的專案
sbt.unindexed.maven.repositories.for.sbt.detection=用於 sbt 檢測的無索引 Maven 儲存庫
sbt.unindexed.maven.repositories.found=<b>找到 {0} 個無索引的 Maven 儲存庫</b>
sbt.unindexed.maven.repositories.found.message=如果要使用相依項補全，請點擊<b><a href="#open">此處</a></b>，選擇所需的儲存庫，並按“更新”按鈕。<a href="#disable">停用…</a>
sbt.unindexed.maven.repositories.sbt.detection=無索引 Maven 儲存庫 sbt 檢測
sbt.unknown.cause=未知原因
scala.sdk.must.be.set=必須設定 Scala SDK
scala.version.requires.library.version=Scala {0} 需要 {1} {2}
select.template=選擇模板
wrong.library.version={0} 版本錯誤