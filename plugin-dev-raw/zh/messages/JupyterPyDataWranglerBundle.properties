JupyterStringTransformationCondition.capitalize.first.character=將第一個字元大寫
JupyterStringTransformationCondition.convert.to.lower.case=轉換為小寫
JupyterStringTransformationCondition.convert.to.upper.case=轉換為大寫
RoundType.ceil=向上取整
RoundType.floor=向下取整
RoundType.round=四捨五入取整
SkewedTransformationType.logarithmic=對數
SkewedTransformationType.square.root=平方根
action.DataWrangler.Jupyter.Code.Export.description=將生成的程式碼匯出到單元
action.DataWrangler.Jupyter.Code.Export.text=在 {0} 中新增單元
action.DataWrangler.Jupyter.Notebook.Export.description=將生成的程式碼匯出到新 Notebook
action.DataWrangler.Jupyter.Notebook.Export.text=新增 Notebook…
action.DataWrangler.Jupyter.Python.Script.Export.description=將生成的程式碼匯出到新的 Python 檔案
action.DataWrangler.Jupyter.Python.Script.Export.text=新增 Python 腳本…
action.DataWrangler.Jupyter.Show.description=在 Data Wrangler 中編輯表
action.DataWrangler.Jupyter.Show.text=在 Data Wrangler 中編輯
action.DataWrangler.TableFile.Show.description=在 Data Wrangler 中編輯表
action.DataWrangler.TableFile.Show.text=在 Data Wrangler 中編輯
action.DataWranglerPyTablePanel.Show.description=使用 Data Wrangler 開啟或隱藏面板
action.DataWranglerPyTablePanel.Show.text=Data Wrangler
action.JupyterAddDataWranglerCellAction.description=在下方插入 Data Wrangler 單元
action.JupyterAddDataWranglerCellAction.text=新增 Data Wrangler 單元
action.JupyterConvertDataWranglerToCodeAction.description=將單元轉換為程式碼單元
action.JupyterConvertDataWranglerToCodeAction.text=將單元轉換為程式碼(_C)
data.wrangler.jupyter.command.changeType.description=修改列的類型
data.wrangler.jupyter.command.changeType.label=將列 {0} 的類型更改為 {1}
data.wrangler.jupyter.command.changeType.name=更改列的類型
data.wrangler.jupyter.command.drop.description.full=從資料幀中移除指定列
data.wrangler.jupyter.command.drop.name=拖放列
data.wrangler.jupyter.command.dropRows.description=刪除一定範圍內的行
data.wrangler.jupyter.command.dropRows.label=刪除從 {0} 到 {1} 的行
data.wrangler.jupyter.command.dropRows.name=刪除行
data.wrangler.jupyter.command.duplicates.description=刪除列中的重複行
data.wrangler.jupyter.command.duplicates.description.full=根據 Jupyter-notebook Python 上下文中的指定列移除重複的行
data.wrangler.jupyter.command.duplicates.label=在 {1} 列中{0}
data.wrangler.jupyter.command.duplicates.name=移除重複項
data.wrangler.jupyter.command.encoding.description={0} 列的獨熱編碼
data.wrangler.jupyter.command.encoding.name=獨熱編碼分類變數
data.wrangler.jupyter.command.fillMissing.description=填充缺失值
data.wrangler.jupyter.command.fillMissing.label=使用 {1} 填充列 {0} 中的缺失值
data.wrangler.jupyter.command.fillMissing.name=填充缺失
data.wrangler.jupyter.command.filter.condition.equal=等於
data.wrangler.jupyter.command.filter.condition.greater=大於
data.wrangler.jupyter.command.filter.condition.greaterOrEqual=大於或等於
data.wrangler.jupyter.command.filter.condition.less=小於
data.wrangler.jupyter.command.filter.condition.lessOrEqual=小於或等於
data.wrangler.jupyter.command.filter.condition.notEqual=不等於
data.wrangler.jupyter.command.filter.description=帶有條件\: {0} {1}
data.wrangler.jupyter.command.filter.description.full=此指令使用 Python 在 Jupyter Notebook 環境中根據指定的條件和值篩選表中所選列中的行
data.wrangler.jupyter.command.filter.label={0} {1} 列
data.wrangler.jupyter.command.filter.name=篩選
data.wrangler.jupyter.command.handleOutliersWithED.description=根據每個資料點與中心(平均值或中位數)的距離移除異常值
data.wrangler.jupyter.command.handleOutliersWithED.label=使用閾值為 {0} 的 ED 移除 {1} 中的異常值
data.wrangler.jupyter.command.handleOutliersWithED.name=使用歐几里得距離檢測異常值
data.wrangler.jupyter.command.handleOutliersWithIQR.description=使用四分位距移除異常值
data.wrangler.jupyter.command.handleOutliersWithIQR.label=使用乘數為 {0} 的 IQR 移除 {1} 中的異常值
data.wrangler.jupyter.command.handleOutliersWithIQR.name=使用 IQR 的異常值檢測
data.wrangler.jupyter.command.handleOutliersWithMAD.description=使用中位數移除異常值
data.wrangler.jupyter.command.handleOutliersWithMAD.label=使用閾值為 {0} 的 MAD 移除 {1} 中的異常值
data.wrangler.jupyter.command.handleOutliersWithMAD.name=使用 MAD 的異常值檢測
data.wrangler.jupyter.command.handleSkewed.description=減少偏斜的轉換
data.wrangler.jupyter.command.handleSkewed.label=列 {1} 中的 {0} 轉換
data.wrangler.jupyter.command.handleSkewed.name=減少偏斜
data.wrangler.jupyter.command.init.description=建立新的 DataFrame 變數
data.wrangler.jupyter.command.init.label=複製 Python DataFrame 變數
data.wrangler.jupyter.command.minMax.description=使用 Min-Max 方法進行歸一化
data.wrangler.jupyter.command.minMax.label=使用 min\={1} 和 max\={2} 對列 {0} 進行歸一化
data.wrangler.jupyter.command.minMax.name=Min-Max 縮放
data.wrangler.jupyter.command.miss.description=刪除列中缺少資料的行
data.wrangler.jupyter.command.miss.description.full=使用 Jupyter 和 Python 刪除指定列中缺少值的行
data.wrangler.jupyter.command.miss.label=在 {1} 列中{0}
data.wrangler.jupyter.command.miss.name=刪除缺失值
data.wrangler.jupyter.command.remove.description.full=從 Jupyter Notebook 中的表中移除包含空值的行
data.wrangler.jupyter.command.remove.name=移除具有 NaN 值的行
data.wrangler.jupyter.command.removeCols.description=移除多列
data.wrangler.jupyter.command.removeCols.label=移除列
data.wrangler.jupyter.command.removeCols.name=移除多列
data.wrangler.jupyter.command.replace.description=從 {0} 到 {1}
data.wrangler.jupyter.command.replace.description.full=動態字串取代動作，可以使用完全符合、區分大小寫和正則表達式支援等參數進行微調，從而支援在 pandas DataFrame 中執行進階動作
data.wrangler.jupyter.command.replace.label=在 {1} 列中{0}
data.wrangler.jupyter.command.replace.name=尋找並取代
data.wrangler.jupyter.command.round.description=將列 {1} 中的值四捨五入到小數點後 {0} 位
data.wrangler.jupyter.command.round.label=將列 {0} 中的數值四捨五入
data.wrangler.jupyter.command.round.name=將數值四捨五入
data.wrangler.jupyter.command.split.description=按分隔符拆分列
data.wrangler.jupyter.command.split.label=按分隔符 {1} 拆分列 {0}
data.wrangler.jupyter.command.split.name=拆分列
data.wrangler.jupyter.command.standardization.description=對資料進行轉換，使其平均值為 0，標準差為 1
data.wrangler.jupyter.command.standardization.label=列 {0} 的 Z 分數歸一化
data.wrangler.jupyter.command.standardization.name=Z 分數歸一化
data.wrangler.jupyter.command.string.transform.description.full=對字串進行簡單的轉換，例如大小寫修改
data.wrangler.jupyter.command.string.transform.name=使用字串轉換列
data.wrangler.py.local.file.init.description=建立新的 DataFrame 變數
data.wrangler.py.local.file.init.label=將表資料匯出到 DataFrame 變數
data.wrangler.py.local.file.init.name=建立 DataFrame
