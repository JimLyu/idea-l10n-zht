JsxTree.action.showHideHooks=顯示/隱藏掛鈎
JsxTree.collapseAll=全部摺疊
JsxTree.context.action.wrapIntoCondition=使用條件包裝
JsxTree.context.action.wrapIntoConditionTernary=使用條件包裝(三元)
JsxTree.dataFlavorNodeName=JSX 樹節點
JsxTree.defaultNodeName=Fragment
JsxTree.else=否則
JsxTree.emptyText=找不到 React 組件
JsxTree.expandAll=全部展開
JsxTree.ifMain=if ({0})
JsxTree.loading=正在載入…
JsxTree.popupMenu.label=包裝方式\:
JsxTree.removeComponent=移除組件
JsxTree.switchCase=case ({0})
JsxTree.switchDefault=default
JsxTree.switchMain=switch ({0})
Marketplace.action.dialog.description=我們在您的專案中檢測到多個具有 React 相依項的 package.json 檔案。\n選擇一個以安裝 React 庫
Marketplace.action.dialog.packageJsonField.label=選擇 package.json\:
Marketplace.action.dialog.title=選擇源軟體套件檔案
Marketplace.action.dialog.validation=指定源 package.json 檔案
Marketplace.action.notification.packageJsonNotFound=在專案中找不到具有 React 相依項的 package.json
Marketplace.wizard.changeSteps.addCss.description=新增 CSS import
Marketplace.wizard.changesForKit.label=用於安裝 {0} 的專案檔案中的更改
Marketplace.wizard.createNextJSDocument.description=在 pages 目錄下建立文檔檔案(_D)
Marketplace.wizard.dependenciesToInstall.label=要安裝的相依項\:
Marketplace.wizard.documentation.label=文檔
Marketplace.wizard.editNextJSConfig.description=編輯 {0} 檔案
Marketplace.wizard.editRootComponent.description=編輯根組件
Marketplace.wizard.install.button=安裝(&I)
Marketplace.wizard.next.error.documentAlreadyExists=根據以下文檔更新 {0}\:
Marketplace.wizard.next.error.pagesDirectory=在 {0} 中找不到 pages 目錄
Marketplace.wizard.noChangesRequired.label=無需進行其他專案更改
Marketplace.wizard.noFileToChange.label=找不到檔案
Marketplace.wizard.noKitSelected.label=未選擇開發套件
Marketplace.wizard.title=React 庫
Palette.action.copyItem.dialog.title=複製調色板條目
Palette.action.copyItem.dialog.variantNameField=變體名稱\:
Palette.action.copyItem.validation.empty=指定變體名稱
Palette.action.copyItem.validation.unique=指定唯一變體名稱
Palette.action.openDoc.label=開啟文檔
Palette.action.showPreview.label=預覽組件
Palette.addSubComponent.intention.label=新增子組件
Palette.addSubComponent.notification.content=將子組件新增到 {0}
Palette.allResult=所有結果
Palette.batch.action.addToPalette.label=將組件新增到調色板
Palette.batch.dialog.componentsLabel=組件
Palette.batch.dialog.paletteLabel=調色板
Palette.batch.dialog.title=調色板編輯器
Palette.batch.editingPalette.importResolve=解析 import…
Palette.batch.editingPalette.resolving=正在解析\: 
Palette.batch.folderField.emptyText=選擇一個包含組件的目錄
Palette.batch.inlay.label=開啟調色板編輯器
Palette.batch.loadingComponents=正在專案相依項中搜尋 React 組件
Palette.batch.loadingComponents.indicator.label=找到的組件\:
Palette.batch.paletteTree.action.moveDown.label=下
Palette.batch.paletteTree.action.moveUp.label=執行
Palette.batch.paletteTree.action.remove.label=移除
Palette.batch.selectCategory.dialog.title=選擇類別
Palette.componentDragWarning=當索引更新時，無法從面板中拖動。
Palette.componentSearchHistory=COMPONENT_SEARCH_HISTORY
Palette.contextMenu.editTemplate=編輯模板
Palette.contextMenu.navigateToFile=導覽到調色板檔案
Palette.devtools.error.findFile=找不到檔案\: {0}
Palette.devtools.error.rootComponent=找不到套用根組件
Palette.devtools.error.rootFile=套用根組件的檔案無效
Palette.devtools.extensionDependency.choosePalette.dialog=新增組件調色板
Palette.devtools.extensionDependency.notification.action.choosePalette=新增
Palette.devtools.extensionDependency.notification.action.openConfigName=開啟組態
Palette.devtools.extensionDependency.notification.action.skip=跳過
Palette.devtools.extensionDependency.notificationContent=<html>{0}</html>
Palette.devtools.infoDialog.dependencyInfo=安裝以下相依項\:
Palette.devtools.infoDialog.dependencyInfo.devtoolsContext=新增調色板\:
Palette.devtools.infoDialog.devToolsField.label=工具箱檔案目錄\:
Palette.devtools.infoDialog.devToolsField.validation=開發工具可能不位於包含索引檔案的目錄中
Palette.devtools.infoDialog.error.devtoolsDirectory=建立 devtools 目錄時出錯
Palette.devtools.infoDialog.error.devtoolsFiles=建立 devtools 檔案時出錯
Palette.devtools.infoDialog.error.paletteFileNotFound=在 devtools 目錄中找不到調色板檔案
Palette.devtools.infoDialog.error.rootComponentFile=編輯根組件時出錯
Palette.devtools.infoDialog.hideEditorCheckbox.label=手動注入 <DevSupport>
Palette.devtools.infoDialog.packageJsonField.label=專案的 package.json 檔案\:
Palette.devtools.infoDialog.rootComponentFile.error=所選檔案不包含根元素
Palette.devtools.infoDialog.rootComponentTree.label=根組件檔案\:
Palette.devtools.infoDialog.textInfo=<html>需要附加組態才能使用 React Buddy 的預覽和調色板功能。<br/>我們可以幫助自動執行此過程\! 將進行以下更改\:<br/>\\&emsp;1) <b>@React-buddy/ide-toolbox</b> 軟體套件將被新增到專案的相依項中；<br/>\\&emsp;2) <b>npm install</b> 將被執行；<br/>\\&emsp;3) 將在工具箱目錄中建立包含組件調色板和預覽組態的檔案；<br/>\\&emsp;4) <b>DevSupport</b> 包裝器將被新增到組件樹的根(請參閱下面的預覽)。</html>
Palette.devtools.infoDialog.title=React Buddy 工具箱組態
Palette.devtools.infoDialog.validation.alreadyContain=指定的目錄已包含調色板檔案
Palette.devtools.infoDialog.validation.noFolder=指定 React Buddy 工具的目錄
Palette.devtools.infoDialog.validation.rootComponent=<html>使用 <b>ReactDOM.render</b> 指定根組件檔案或選擇<b>手動注入 DevSupport</b></html>
Palette.intention.addToPalette=新增到 React 調色板
Palette.intention.createNewItemDialog.title=建立新 {0}
Palette.intention.devtoolsNotFound.action.label=組態
Palette.intention.devtoolsNotFound.nextJs.notSupported=組件預覽適用於基於 Next.js 10+ 的專案
Palette.intention.devtoolsNotFound.notification.description=在 package.json 中找不到 "@React-buddy/ide-toolbox" 或缺少某些組態檔案
Palette.intention.devtoolsNotFound.notification.title=React Buddy 支援
Palette.intention.devtoolsNotFound.packageJson.notFound=找不到 {0} 的 package.json
Palette.intention.devtoolsNotFound.projectType.notSupported=目前，{0} 專案不支持預覽
Palette.intention.mainDialog.title=將組件新增到調色板
Palette.intention.mainDialog.validation.alreadyExistsVariant=已存在使用此名稱的變體
Palette.intention.mainDialog.validation.emptyCategory=為組件指定類別
Palette.intention.mainDialog.validation.emptyComponent=指定組件
Palette.intention.mainDialog.validation.emptyVariantName=指定變體名稱，因為組件已有預設變體
Palette.intention.name.label={0} 名稱\:
Palette.intention.requiredProps.notification.description=為避免編譯錯誤，需要填寫必填屬性
Palette.intention.requiredProps.notification.title=React 調色板
Palette.intention.validation.alreadyExistsComponent=此類別{0}已經存在
Palette.intention.validation.emptyComponentName=指定{0}名稱
Palette.preview.browser.title=預覽
Palette.preview.code.title=程式碼
Palette.preview.noPreview.label=預覽不可用
Palette.preview.noPreview.title=無預覽
Preact.action.create.component.arrowFunction.description=建立箭頭函式 Preact 組件
Preact.action.create.component.classbased.description=建立基於類別的 Preact 組件
Preact.action.create.component.functionDeclaration.description=建立函式宣告 Preact 組件
ProxyChecking.notification.text=這可能會導致螢幕和實體設計器出現問題
ProxyChecking.notification.title=代理用於 localhost
React.action.create.component=React 組件
React.action.create.component.arrowFunction.description=建立箭頭函式 React 組件
React.action.create.component.arrowFunctionType.name=箭頭函式組件
React.action.create.component.classType.name=基於類別的組件
React.action.create.component.classbased.description=建立基於類別的 React 組件
React.action.create.component.description=建立一個新的 React 組件
React.action.create.component.functionDeclaration.description=建立函式宣告 React 組件
React.action.create.component.functionType.name=函式組件
React.action.create.component.title=建立 React 組件
React.action.create.component.validation.capitalized=組件名稱必須大寫
React.action.create.component.validation.invalidChars=組件名稱包含無效字元
React.action.create.component.validation.nullName=指定組件名稱
React.action.generateComponent.title=React 調色板中的組件
React.action.generateHook.title=React 掛鈎
React.action.showSnippetPreview.label=顯示程式碼段預覽
React.appView.rootFileField=根檔案\:
React.appView.rootFileField.dialogTitle=選擇根檔案
React.appView.showRoute.caption=僅顯示路由
React.editor.linemarker.handler.caption=組件事件處理程序
React.editor.linemarker.hook.caption=React 掛鈎
React.fix.exhaustiveDeps=將相依項陣列更新為\: {0}
React.generation=React Buddy
React.generation.test.afterAll=afterAll
React.generation.test.afterEach=afterEach
React.generation.test.beforeAll=beforeAll
React.generation.test.beforeEach=beforeEach
React.generation.test.dialog.title=建立 React 組件測試
React.generation.test.edit.settings.tooltip=編輯目標設定
React.generation.test.generate.label=生成
React.generation.test.generateStubs.label=為 prop 生成存根
React.generation.test.setting.defaultDirectory.label=預設目錄\:
React.generation.test.setting.directory.dialog.title=測試預設目錄
React.generation.test.setting.generateInto.label=將測試生成到\:
React.generation.test.setting.subDirectory.label=組件的子目錄\:
React.inspection.JSXMap=JSX 映射
React.inspection.canBeConvertedToProp=可以轉換為 prop
React.inspection.canBeConvertedToStateOrProp=可以轉換為 state 或 prop
React.inspection.canCreateProps=可以建立不存在的 prop
React.inspection.canMapToJSX=可以展開到 JSX
React.inspection.convertToState=轉換為 state
React.inspection.convertUnresolvedToState=將 unresolved 轉換為 useState
React.inspection.convertVarToState=轉換為 useState 變數
React.inspection.createProp=建立 prop
React.inspection.createProps=在 {1} 中建立 {0} prop
React.inspection.createStateVariable=建立 useState 變數 {0}
React.inspection.createTest=建立測試
React.inspection.createTest.validation.alreadyExists=<html>所選目錄中已存在 <b>{0}<b/><html/>
React.inspection.createTest.validation.emptyField=目標欄位不得為空
React.inspection.dependency.addPaletteExtension=新增組件調色板
React.inspection.dependency.paletteExtensionExist=組件調色板可用
React.inspection.emptyAttribute=空組件特性值
React.inspection.emptyFormActionAttribute=Form action attribute is empty
React.inspection.emptyRefAttribute=ref 特性為空
React.inspection.exhaustiveDeps=需要更新相依項陣列
React.inspection.noParameters=找不到組件參數
React.inspection.noPropsDefinition=找不到組件 prop 定義
React.inspection.nonEditablePropsType=組件屬性類型不可編輯
React.inspection.quickFix.emptyEventHandler=生成事件處理程序
React.inspection.quickFix.emptyFormActionAttribute=Generate useActionState
React.inspection.quickFix.emptyRefAttribute=建立 ref
React.inspector.action.addElement=新增元素
React.inspector.action.navigateToSource=導覽到原始碼
React.inspector.error.calculationError=屬性計算錯誤
React.inspector.error.propertiesNotFound=找不到屬性
React.intention.addUseRef=建立 ref
React.intention.generateHandler.label=生成處理程序
React.intention.generateHandler.label.capitalized=生成處理程序
React.intention.wrapIntoCallback.label=使用 useCallback() 包裝
React.intention.wrapIntoCondition=使用條件包裝
React.intention.wrapIntoConditionTernary=使用條件包裝(三元)
React.intention.wrapIntoMemo.label=使用 memo() 包裝
React.jsxTree.action.addPaletteComponent.label=從調色板新增組件
React.jsxTree.action.generateHandler.label=生成處理程序
React.livetemplate.context.js.description=建立 React 上下文提供程序
React.livetemplate.context.tsx.description=建立 React 上下文提供程序
React.livetemplate.error.groupNotFound=<html>找不到 React Buddy 模板組。<br/>請將組名稱重設為預設值\: <b>{0}</b></html>
React.livetemplate.error.templateNotFound=<html>找不到相應的實時模板。<br/>請將縮寫或描述重設為預設值\:<br/>\\&emsp;- 縮寫\: \\&quot;{0}\\&quot;;<br/>\\&emsp;- 描述\: \\&quot;{1}\\&quot;.</html>
React.preview.action.visibility.outline=顯示/隱藏 JSX Outline
React.preview.action.visibility.preview=顯示/隱藏預覽
React.preview.errorWhileEditing=編輯 {0} 時出錯
React.preview.fillActionName=新增必需 prop
React.preview.notificationContent=要顯示組件的預覽，您需要填寫必需屬性
React.preview.notificationTitle=React 預覽
React.preview.validation.indexing=索引時預覽不可用
React.preview.validation.previewsNotFound=找不到與組件符合的 Previews.tsx
React.preview.validation.previewsNotFound.title=無法開始預覽
React.preview.validation.previewsNotSuitable=<html>開發伺服器正在為當前工作區中的另一個專案執行。<br/>請關閉預覽伺服器並重試。</html>
React.preview.wrongFileType=此類型的檔案無法預覽
React.previewServer.title=React 預覽伺服器
React.settings.devServerConfigs.addConfig=新增組態
React.settings.devServerConfigs.label=開發伺服器組態
React.settings.devServerConfigs.removeConfig=移除組態
React.settings.devServerConfigs.scriptField.label=腳本\:
React.settings.devServerConfigs.validation.emptyConfigurationParameters=必須填寫所有組態參數
React.settings.devServerConfigs.validation.invalidUrl=URL 無效
React.settings.devServerConfigs.validation.noScript=指定執行開發伺服器的腳本
React.settings.handlerDeclarationType.arrow=箭頭函式
React.settings.handlerDeclarationType.label=事件處理程序生成
React.settings.handlerDeclarationType.regular=函式宣告
React.settings.previewVisibilityLabel=顯示編輯器浮動面板
React.settings.saveOutlineStateAcrossEditors=儲存所有檔案的 JSX Outline 狀態
React.settings.subCompNotification.label=顯示子組件通知
React.settings.vcsNotification.addToVcs=新增到 VCS
React.settings.vcsNotification.description=rcb-settings.xml 位於版本控制系統中忽略的檔案列表中
React.settings.vcsNotification.ignore=忽略
React.settings.vcsNotification.title=React Buddy 設定
React.settings.wrapIntoUseCallback=使用 useCallback() 包裝生成的處理程序
React.toolwindow.start.typing.for.search=開始輸入以進行搜尋
React.visualDesigner.componentPropsCaption=組件屬性
React.visualDesigner.copyUrl=複製 URL
React.visualDesigner.highlightModeCaption=醒目提示元素
React.visualDesigner.highlightModeDescription=選擇一個元素以跳轉到源碼
React.visualDesigner.previewSettings.configureComponent=組態組件
React.visualDesigner.previewSettings.zoomIn=放大
React.visualDesigner.previewSettings.zoomOut=縮小
React.visualDesigner.previewSettings.zoomReset=重設縮放
React.visualDesigner.previewSettingsCaption=預覽設定
React.visualDesigner.refresh=重新整理
React.visualDesigner.reinit=重新初始化
React.visualDesigner.reinit.description=重新建立預覽瀏覽器實例
React.visualDesigner.reload=重新載入
React.visualDesigner.reload.description=重新載入頁面
React.visualDesigner.traceUpdates=醒目提示顯示組件呈現
React.visualDesigner.traceUpdatesDescription=啟用螢光筆，在 React 組件重新呈現時為其邊界著色
React.visualDesigner.waitingForServer.instruction=<html><p>我們將自動確定您的伺服器的 URL 或使用伺服器設定中指定的值。如果確定不正確，請手動更改 URL。</p></html>
React.visualDesigner.waitingForServer.label=正在等待
React.visualDesigner.waitingForServer.rcblabel=正在等待伺服器…
React.visualDesigner.waitingForServer.urlFieldLabel=開發伺服器 URL\:
ReactAdmin.inspection.unresolved.resource=沒有相應的資源
Settings.displayName.devServer=開發伺服器組態
Settings.displayName.editor=編輯器設定
Settings.displayName.storybook=Storybook
Settings.displayName.testGeneration=測試生成
Snippet.dialog.title=程式碼段參數
Snippet.param.wizard.asSeparateComponent=作為單獨的組件插入
Snippet.param.wizard.bar.title=條形圖設計器
Snippet.param.wizard.cardList.title=卡片列表設計器
Snippet.param.wizard.cardObject.title=卡片物件設計器
Snippet.param.wizard.componentParameters.label=組件參數
Snippet.param.wizard.dialog.title=對話框設計器
Snippet.param.wizard.finalButton=完成(&F)
Snippet.param.wizard.form.title=表單設計器
Snippet.param.wizard.line.title=折線圖設計器
Snippet.param.wizard.parameters.label=參數
Snippet.param.wizard.pie.title=餅圖設計器
Snippet.param.wizard.preview.hide=隱藏預覽
Snippet.param.wizard.preview.show=顯示預覽
Snippet.param.wizard.scatter.title=散點圖設計器
Snippet.param.wizard.table.title=表設計器
Snippet.param.wizard.title=程式碼段參數編輯器
Snippet.param.wizard.treeTable.title=樹形表設計器
Snippet.param.wizard.validation.arrayVariable=指定陣列變數
Snippet.param.wizard.validation.collectionIsEmpty=指定 {0} 條目
Snippet.param.wizard.validation.objectName=指定物件名稱
Snippet.param.wizard.validation.variable=指定變數
Snippet.validation.notBoolean=為 {0} 指定的值不是布林值
Snippet.validation.notCompatibleType=為 {0} 指定的值的類型不相容
Snippet.validation.notNumber=為 {0} 指定的值不是數字
Snippet.validation.specifyValue=指定 {0} 的值
Snippet.velocity.charts.axisLabel=軸標籤
Snippet.velocity.charts.bottomAxis=底軸\:
Snippet.velocity.charts.data=資料屬性\:
Snippet.velocity.charts.id=ID 屬性\:
Snippet.velocity.charts.index=索引屬性\:
Snippet.velocity.charts.key=鍵屬性\:
Snippet.velocity.charts.label=標籤屬性\:
Snippet.velocity.charts.leftAxis=左軸\:
Snippet.velocity.charts.rightAxis=右軸\:
Snippet.velocity.charts.topAxis=頂軸\:
Snippet.velocity.charts.validation.emptyData=指定資料屬性
Snippet.velocity.charts.validation.emptyId=指定 ID 屬性
Snippet.velocity.charts.validation.emptyIndex=指定索引屬性
Snippet.velocity.charts.validation.emptyKeys=必須至少選擇一個鍵屬性
Snippet.velocity.charts.validation.emptyLabel=指定標籤屬性
Snippet.velocity.charts.validation.emptyValue=指定值屬性
Snippet.velocity.charts.validation.emptyX=指定 x 屬性
Snippet.velocity.charts.validation.emptyY=指定 y 屬性
Snippet.velocity.charts.value=值屬性\:
Snippet.velocity.charts.x=x\:
Snippet.velocity.charts.y=y\:
Snippet.velocity.param.card.field.filterBy=篩選依據\:
Snippet.velocity.param.card.field.labelPosition=標籤位置\:
Snippet.velocity.param.card.field.outline=帶輪廓
Snippet.velocity.param.card.field.pagination=分頁
Snippet.velocity.param.card.field.rowsPerPage=每頁行數\:
Snippet.velocity.param.card.field.solid=實心
Snippet.velocity.param.card.field.sortBy=排序依據\:
Snippet.velocity.param.card.field.subTitleProperty=副標題屬性\:
Snippet.velocity.param.card.field.table=要顯示的屬性
Snippet.velocity.param.card.field.table.validation=卡片項屬性名稱不得為空
Snippet.velocity.param.card.field.titleProperty=標題屬性\:
Snippet.velocity.param.card.itemField.placeholder=按 Ctrl + 空格鍵檢視選項
Snippet.velocity.param.card.key.label=鍵屬性\:
Snippet.velocity.param.card.object.type=卡片物件類型\:
Snippet.velocity.param.card.select.variable=區域變數\:
Snippet.velocity.param.cardList.actions.label=卡片列表動作
Snippet.velocity.param.cardObject.actions.label=卡片動作\:
Snippet.velocity.param.dataSource.type=資料來源\:
Snippet.velocity.param.dialog.actions.label=對話框動作
Snippet.velocity.param.dialog.content.label=內容\:
Snippet.velocity.param.dialog.fullScreen.label=全螢幕
Snippet.velocity.param.dialog.fullWidth.label=全寬
Snippet.velocity.param.dialog.maxWidth.label=最大寬度\:
Snippet.velocity.param.dialog.position.label=位置\:
Snippet.velocity.param.dialog.title.label=標題\:
Snippet.velocity.param.form.action.actionType=按類型分組
Snippet.velocity.param.form.action.formSubmit=提交表單
Snippet.velocity.param.form.action.id=ID
Snippet.velocity.param.form.action.label=標籤
Snippet.velocity.param.form.action.table.validation=動作表欄位不得為空
Snippet.velocity.param.form.actions.table=表單動作
Snippet.velocity.param.form.field.actionType=按類型分組
Snippet.velocity.param.form.field.controlType=控制類型
Snippet.velocity.param.form.field.dataType=資料類型
Snippet.velocity.param.form.field.description=描述
Snippet.velocity.param.form.field.editor.title=表單類型欄位編輯器
Snippet.velocity.param.form.field.helperText=幫助程序文本
Snippet.velocity.param.form.field.label=標籤
Snippet.velocity.param.form.field.labelPosition=標籤位置\:
Snippet.velocity.param.form.field.name=名稱
Snippet.velocity.param.form.field.placeholder=佔位符
Snippet.velocity.param.form.field.required=必要
Snippet.velocity.param.form.field.table=表單欄位
Snippet.velocity.param.form.field.table.validation=表單欄位名稱不得為空
Snippet.velocity.param.form.field.validate=驗證
Snippet.velocity.param.form.loading.type=正在載入…
Snippet.velocity.param.form.new.type.name=新類型名稱\:
Snippet.velocity.param.form.object.type=表單物件類型\:
Snippet.velocity.param.form.select.type=物件類型\:
Snippet.velocity.param.preview.compilation.error=Velocity 模板編譯錯誤。\n最有可能的是，您需要對原型程式碼進行更改。
Snippet.velocity.param.table.actions.label=表動作
Snippet.velocity.param.table.column.sorting=排序
Snippet.velocity.param.table.column.table=表列屬性
Snippet.velocity.param.table.column.title=標題
Snippet.velocity.param.table.column.validation=表列名不得為空
Snippet.velocity.param.table.columns.label=表列
Snippet.velocity.param.table.expandIfSet=如果已設定以下屬性則展開\:
Snippet.velocity.param.table.expandableRow=可展開行
Snippet.velocity.param.table.expandableRow.validation=<html>為<b>如果已設定屬性則展開</b>和<b>要顯示的屬性</b>至少指定一個值</html>
Snippet.velocity.param.table.fixedColumn=固定列\:
Snippet.velocity.param.table.fixedHeader=固定標題
Snippet.velocity.param.table.hierarchical=分層屬性\:
Snippet.velocity.param.table.object.type=表物件類型\:
Snippet.velocity.param.table.propsToDisplay=要顯示的屬性\:
Snippet.velocity.param.table.rowSize=行大小\:
Snippet.velocity.param.table.stripes=條紋
Storybook.action.createNewStory.description=建立一個新故事
Storybook.action.createNewStory.dialog.title=新增 Storybook .stories 檔案
Storybook.action.createNewStory.label=Storybook 故事
Storybook.action.generateStory=Storybook 中的組件
Storybook.componentDragWarning=索引更新時無法拖動。
Storybook.contextMenu.navigate=導覽到故事
Storybook.intention.createStory.allProps.label=為所有 prop
Storybook.intention.createStory.category.label=類別\:
Storybook.intention.createStory.category.validation=指定故事的類別
Storybook.intention.createStory.dialog.title=建立故事
Storybook.intention.createStory.directory.label=目標\:
Storybook.intention.createStory.generateArgs.actionLink=預設實參
Storybook.intention.createStory.generateArgs.label=生成
Storybook.intention.createStory.requiredProps.label=僅為必需 prop
Storybook.intention.createStory.title=新增到 Storybook
Storybook.intention.createStory.validation.directoryDoesNotExists=Storybook 預設目錄不存在
Storybook.intention.createStory.validation.storyAlreadyExists=故事已經存在
Storybook.livetemplate.newStory.js.7plus.description=Storybook v7 故事
Storybook.livetemplate.newStory.js.description=Storybook v6 故事
Storybook.livetemplate.newStory.tsx.7plus.description=Storybook v7 故事
Storybook.livetemplate.newStory.tsx.description=Storybook v6 故事
Storybook.setting.defaultDirectory.label=預設目錄\:
Storybook.setting.directory.dialog.title=Storybook 預設目錄
Storybook.setting.generateInto.label=將故事生成到\:
Storybook.setting.subDirectory.label=組件的子目錄\:
Storybook.setting.use7plus.label=使用 CSF 7+
Storybook.toolwindow.stripe=Storybook
action.com.intellij.reactbuddy.GenerateReactComponentAction.description=生成 React 組件
action.com.intellij.reactbuddy.GenerateReactComponentAction.text=React 組件
action.com.intellij.reactbuddy.InstallReactLibraryAction.description=開啟 React Buddy 對話框以安裝 React 庫
action.com.intellij.reactbuddy.InstallReactLibraryAction.text=安裝 React 庫
action.com.intellij.reactbuddy.OutlineVisibleAction.description=在當前編輯器中顯示/隱藏大綱
action.com.intellij.reactbuddy.PreviewVisibleAction.description=在當前編輯器中顯示/隱藏預覽
action.com.intellij.reactbuddy.ShowInComponentTreeAction.text=顯示組件樹
action.com.intellij.reactbuddy.action.hook.GenerateReactHookAction.description=生成 React 掛鈎
action.com.intellij.reactbuddy.action.hook.GenerateReactHookAction.text=React 掛鈎
action.com.intellij.reactbuddy.action.storybook.GenerateStoryAction.description=生成 Storybook 組件
action.com.intellij.reactbuddy.action.storybook.GenerateStoryAction.text=Storybook 中的組件
configurable.group.com.intellij.reactbuddy.tools.settings.description=<html><body>React Buddy 通過提供圍繞 JSX 的可視化工具來幫助開發基於 React.js 的應用程式。
configurable.group.com.intellij.reactbuddy.tools.settings.display.name=React Buddy
error.reporter.privacy.notice.text=<html>我同意 React Buddy 開發團隊將使用<b>硬體組態</b>(作業系統名稱、PC 記憶體、PC 主機名)、<b>軟體組態</b>(IDEA 版本、Java Runtime 版本、IDEA 名稱)、<b>產品資訊</b>(延伸模組版本、上次呼叫的動作)以及上面顯示的<b>錯誤詳細資訊</b>來<b>改進</b>其產品。<b>請確保堆疊追蹤不包含任何敏感資訊</b>。此外，如果您能夠通過<a href\="https\://react-buddy.com/contacts/">電子郵件</a>或 <a href\="https\://discord.gg/dgcrTKFUb8">Discord 頻道</a>分享重現案例，React Buddy 團隊將不勝感激。</html>
form.field.rule.editor.numberRestriction=字元數
form.field.rule.editor.title=新增驗證規則
form.field.rule.intention.title=新增驗證規則
inspection.group.key.rcbCommon=React Buddy
react.buddy.addsubcomponent.notifications=React Buddy 新增子組件
react.buddy.common.notifications=React Buddy 常見通知
react.buddy.logs=React Buddy 日誌
react.componentRegister.command.name=React Buddy 註冊組件
toolwindow.stripe.reactInspector=React 檢查器
toolwindow.stripe.reactPalette=React 調色板
