config.name.default=Kafka
toolwindow.title=Kafka
settings.group.name=Kafka

open.settings.action.text=設定
show.internal.topic=顯示內部主題
action.create.topic=建立主題
action.delete.topic=刪除主題
show.internal.topic.hint=顯示內部主題
show.full.topic.config=顯示完整設定
show.full.topic.config.hint=顯示完整設定
topic.not.found=找不到主題 {0}
topic.tab.configs=設定
topic.tab.partitions=分區
settings.properties=進階屬性:
settings.properties.file=屬性檔案:
settings.properties.file.browse=Kafka 屬性檔案
settings.property.source=設定源:
settings.property.source.file=屬性

settings.url.text.empty=broker1,broker2
settings.url.text.hint=使用“,”分隔符指定代理列表(broker1,broker2)
settings.url.must.be.non.empty.hint=代理不得為空

create.producer.action.title=新增生產者
create.consumer.action.title=新增使用者
create.producer.and.consumer.action.title=新增生產者和使用者
kafka.producer.action.produce.title=生成
action.consume.start.title=開始使用
action.consume.stop.title=停止使用
record.headers.label=標頭:
producer.idempotence.label=冪等性
produce.to.topic=生產到主題
consume.from.topic=從主題使用
action.clear.output=清除輸出
action.table.stats=表統計資訊
action.save.preset=將預設儲存到收藏夾
action.remove.preset=從收藏夾中移除預設

# Producer
producer.topics=主題:
producer.key=密鑰:
producer.value=值:
producer.title.options=選項
producer.forcePartition=強制分區:
producer.compression=壓縮:
producer.asks=ACK:
producer.preset.apply=將預設應用到設定
producer.error.topic.empty.title=生產者錯誤
producer.error.topic.empty=未選擇主題

# Consumer editor
consumer.error.topic.empty.title=使用者錯誤
consumer.error.topic.empty=未選擇主題
label.filter.key=密鑰:
label.filter.value=值:
label.filter.head.key=標頭鍵:
label.filter.head.value=標頭值:
settings.label.topics=主題:
settings.title.format=格式化
settings.format.key=密鑰:
settings.format.value=值:
settings.title.range.filters=範圍和篩選器
settings.filters.from=起點:
settings.filters.limit=限制:
settings.filter=篩選器:
settings.title.partitions=分區
settings.partitions=分區:
settings.advanced=進階設定

toggle.presets=預設
toggle.settings=設定
toggle.data=資料
toggle.details=詳細資訊
consumer.table.awaiting=正在等待資料

# Kafka consumer advanced settings and properties fields

# Kafka consumer advanced settings and properties fields
consumer.records.limit=使用者記錄限制
consumer.records.limit.descr=當記錄數達到限制時，將清除客戶端上的舊記錄。<br>負數，'0' 或空值表示沒有限制。

# Consumer table stats (bottom status bar)
table.stats.total=總計:
table.stats.visible=可見:
table.stats.memory=記憶體:
table.stats.speed=速度:

# Consumer presets
consumer.preset.limit=限制 {0} {1}
consumer.preset.filter=篩選器: {0}
consumer.preset.key=鍵: {0}
consumer.preset.value=值: {0}
consumer.preset.header.key=標頭鍵: {0}
consumer.preset.header.value=標頭值: {0}
consumer.preset.no.topic=無主題

# Producer presets
producer.preset.topic=主題: {0}
producer.preset.no.topic=無主題
producer.preset.key=鍵 [{0}]: {1}
producer.preset.none=無
producer.preset.no.key=無鍵
producer.preset.value=值 [{0}]: {1}
producer.preset.no.value=無值

# FieldViewerType
field.viewer.type.auto=自動
field.viewer.type.text=文本
field.viewer.type.json=JSON
field.viewer.type.base64=Base64

# FieldType
field.type.json=JSON
field.type.string=String
field.type.long=Long
field.type.double=Double
field.type.float=Float
field.type.base64=字節(Base64)
field.type.null=無

# ConsumerLimitType
consumer.limit.type.none=無
consumer.limit.type.topicRecords=主題記錄號
consumer.limit.type.date=日期
consumer.limit.type.topicMaxSize=主題最大大小
consumer.limit.type.partitionRecords=分區記錄號
consumer.limit.type.partitionMaxSize=分區最大大小

# ConsumerStartType
consumer.start.type.now=立即
consumer.start.type.lastHour=過去 1 小時
consumer.start.type.today=今天
consumer.start.type.yesterday=昨天
consumer.start.type.specificDate=具體日期
consumer.start.type.beginning=從開頭
consumer.start.type.consumerGroup=使用者組
consumer.start.type.latestOffsetMinusX=最新偏移量減去 X
consumer.start.type.offset=偏移

# ConsumerFilterType
consumer.filter.type.none=無
consumer.filter.type.contains=包含
consumer.filter.type.notContains=不包含
consumer.filter.type.regexp=RegExp

# Consumer record details
consumer.record.headers=標頭:
consumer.record.topic=主題:
consumer.record.key=密鑰:
consumer.record.value=值:
consumer.record.partition=分區:
consumer.record.offset=偏移:
consumer.record.timestamp=時間戳:
consumer.record.keysize=鍵大小:
consumer.record.valuesize=值大小:
property.file.is.not.found=找不到 Kafka 屬性 {0}
error.start.consumer=使用者錯誤
producer.wrong.partition=主題 {1} 的錯誤分區 {0}
kafka.producer.error=生產者錯誤
consumer.partition.not.found=找不到主題 {0} 的所選分區。

# Create topic dialog
dialog.create.topic.name=名稱:
dialog.create.topic.num.partition=分區號:
dialog.create.topic.replication.factor=複製系數:
create.topic.leave.empty.for.default=預設留空

# Delete topic dialog
action.delete.topic.single.message=是否刪除主題“{0}”?
action.delete.topic.multi.message=是否刪除 {0} 個主題?
action.delete.topic.title=刪除
settings.registry.title=架構註冊表(可選)
settings.registry.url=URL:
settings.registry.additional.properties=附加屬性:
settings.registry.url.hint=http://localhost:8081
schema.not.found=找不到架構 {0}
show.schema.info=顯示架構
show.edit.schema.diff.title=更新主題: {0}
show.edit.schema.diff.prev.name=最新版本:
show.edit.schema.diff.new.name=新架構
edit.schema.info=更新架構
registry.tab.fields=欄位
registry.tab.versions=版本
action.add.schema.title=建立架構
action.remove.version.confirm.dialog.msg=是否刪除主題“{1}”的版本 {0}?
action.remove.version.title=刪除版本
schema.registry.add.schema.dialog.field.format=格式:
registry.format.avro=AVRO
registry.format.protobuf=Protobuf
registry.format.json=JSON
registry.strategy.custom.subject=自訂主題
registry.strategy.topic=主題名稱
registry.strategy.record=記錄名稱
registry.format.topic.record=主題+記錄名稱
registry.key=鍵
registry.value=值
field.type.avro.registry=Avro (架構註冊表)
field.type.protobuf.registry=Protobuf (架構註冊表)
field.type.json.registry=JSON (架構註冊表)
registry.subject.combobox.default.name=選擇一個主體
registry.consumer.type.auto=自動
registry.consumer.type.subject=主題
registry.consumer.type.schema.id=架構 ID
registry.consumer.type.custom=自訂架構
action.show.deleted.subject.title=顯示軟刪除的主體
registry.info.dialog.title=方案“{0}”
action.clone.schema.title=克隆架構
schema.registry.deleted=主體已被軟刪除
action.remove.version.confirm.dialog.option=永久刪除
action.remove.schema.confirm.dialog.msg.soft=是否刪除主題“{0}”?
action.remove.schema.confirm.dialog.msg.permanent=主題“{0}”已被軟刪除。是否永久刪除?
action.diff.version.title=顯示差異
action.diff.select.two.message=要比較架構，請選擇兩個版本
diff.dialog.button.update=更新
diff.dialog.title=架構之間的區別
update.dialog.title=更新架構
connection.is.not.found.in.config=在連線屬性中找不到 {0}
connection.admin.is.not.initialized=Kafka 管理客戶端未初始化
connection.check.port.success.but.next.error=URL {0} 可存取，但 Kafka 無法連線。
connection.kafka.registry.is.not.available=Kafka 註冊表不可用
kafka.auth.type.kerberos=Kerberos
kafka.auth.type.plain=純
kafka.auth.type.scram256=SCRAM-SHA-256
kafka.auth.type.scram512=SCRAM-SHA-512
kafka.sasl.mechanism=SASL 機制:
kafka.username=用戶名:
kafka.password=密碼:
kafka.truststore.location=信任庫位置:
kafka.truststore.password=信任庫密碼:
kafka.truststore.location.dialog.title=選擇信任庫位置
kafka.auth.enable.server.host.name.indetification=驗證伺服器主機名稱
kafka.keystore.location=密鑰庫位置:
kafka.keystore.password=密鑰存儲密碼:
kafka.key.password=密鑰密碼:
kafka.auth.none=無
kafka.auth.sasls=SASL
kafka.auth.ssl=SSL
kafka.auth.aws_iam=AWS IAM
kafka.auth.method.label=身份驗證:
kafka.ssl.use.keystore=Use Keystore client authentication
kafka.token=令牌:
kafka.auth.basic=基本身份驗證
kafka.auth.bearer=持有者
kafka.auth.sasl.use.ssl=啟用 SSL
ssh.additional.label=(適用於架構註冊表)
ssh.additional.helper=SSH 隧道僅適用於架構註冊表。所選 SSH 設定未用於引導伺服器。<br><br>
kafka.broker.group.title=Kafka 代理
kafka.property.source.label=屬性源:
kafka.property.source.field=隱式
kafka.property.source.file=來自檔案
settings.registry.tab=架構註冊表
settings.property.source.properties=屬性