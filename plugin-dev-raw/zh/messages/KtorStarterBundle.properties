action.Ktor.Add.Plugins.Action.text=新增延伸模組…
action.KtorGenerateOpenApiAction.MainMenu.text=為 Ktor 模組生成 OpenAPI 文檔
action.KtorGenerateOpenApiAction.MainMenu.text.named=為 Ktor 模組生成 OpenAPI 文檔\: {0}
action.KtorGenerateOpenApiAction.text=為 Ktor 模組生成 OpenAPI 文檔
action.MigrateKtorAction.MainMenu.text=將專案遷移到最新的 Ktor 版本…
action.MigrateKtorAction.text=將專案遷移到最新的 Ktor 版本…
action.MigrateKtorAction.update.text=遷移到 Ktor {0}
add.imports.automatically=自動為 Ktor 模組新增匯入
advanced.setting.ktor.run.using.gradle=使用 Gradle 執行
advanced.setting.ktor.run.using.gradle.description=預設情況下，IDE 使用 Gradle 建置專案並執行任務。如果停用，則使用 IDE 執行 Ktor 組態。
advanced.settings.ktor=Frameworks. Ktor
comment.go.to.documentation=從 Ktor 伺服器和客戶端<a href\="{0}">教程</a>開始
comment.go.to.documentation.link=https\://ktor.io/docs/
create.run.configuration.automatically=自動建立執行組態
creating.ktor.run.configuration=建立 Ktor 執行組態
creating.ktor.run.configuration.for.module=正在為模組 {0} 建立 Ktor 執行組態
error.with.description=錯誤\: {0}
generate.ktor.project=生成 <b>Ktor</b> 專案。
ktor.add.starters.inlay.hint.provider.description=點擊以新增 Ktor 延伸模組。
ktor.add.starters.inlay.hint.provider.name=新增 Ktor 延伸模組
ktor.add.starters.inlay.hint.text=新增延伸模組…
ktor.add.starters.plugin.dialog.wrapper.title=新增延伸模組
ktor.category=Ktor
ktor.client.generator.title=Ktor
ktor.config.property.deprecated=棄用的組態屬性 ''{0}''
ktor.config.property.deprecated.reason=已棄用\: {0}
ktor.config.property.folding.empty.value=<空>
ktor.config.property.module.cannot.be.private=模組不能為 private
ktor.config.property.module.cannot.have.parameters=模組不能有參數
ktor.config.property.module.duplicated=模組重複\: ''{0}''
ktor.config.property.module.has.multiple.candidates=模組有多個候選項。可以載入任何一項
ktor.create.extension.test=為 Ktor 路由建立測試
ktor.create.extension.test.title=為 Ktor 路由建立測試
ktor.create.module.test=為 Ktor 模組建立測試
ktor.create.module.test.title=為 Ktor 模組建立測試
ktor.create.new.ktor.client=建立新的 Ktor 客戶端
ktor.create.route.test=為 Ktor 路由建立測試
ktor.create.route.test.title=為 Ktor 路由建立測試
ktor.create.test=建立測試
ktor.create.test.button.text=建立
ktor.debugger.label.phase=，階段\: {0}
ktor.debugger.label.plugin=延伸模組\: {0}
ktor.documentation.description=描述
ktor.documentation.not.loaded=目前無法載入文檔。
ktor.documentation.options=選項
ktor.documentation.usage=用法
ktor.endpoints.presentation.title=Ktor HTTP 伺服器
ktor.endpoints.websockets.presentation.title=Ktor 伺服器 Websocket
ktor.engine.description=處理網絡請求的引擎
ktor.enter.valid.function.name.message=請輸入有效的 Kotlin 函式名稱
ktor.extract.function.extract.button.text=提取
ktor.extract.route.intention.text=將路由提取到單獨的方法
ktor.extracted.extension.name=函式名稱\:
ktor.failed.to.generate.project=無法生成 Ktor 專案
ktor.folder.not.empty=目錄不為空\: \n{0}\n某些檔案可能會被覆蓋。\n\n是否繼續?
ktor.folder.not.empty.title=目錄不為空
ktor.generate.openapi=生成新的 OpenAPI 文檔
ktor.generate.openapi.documentation.progress.message.title=正在為模組 {0} 生成 OpenAPI 文檔
ktor.generate.openapi.intention=為當前模組生成 OpenAPI 文檔
ktor.generate.openapi.progress.message=正在為模組 {0} 生成 OpenAPI 文檔
ktor.generate.route.test.action=生成當前路由的測試
ktor.generate.test.for.following.routes=為以下路由生成測試\:
ktor.inline.route.intention.text=內聯路由擴展
ktor.inspections.config.yaml=Ktor application.yaml
ktor.inspections.group.key=Ktor
ktor.message.class.already.exists=此軟體套件中已存在 {0} 類別。是否要向此類別新增新測試?
ktor.message.symbols.not.allowed.in.testfun=測試函式名稱中不允許使用以下符號\: /、'、"
ktor.migration.progress.title=正在遷移到 Ktor {0}
ktor.migration.started=已開始遷移到 Ktor {0}
ktor.migration.unavailable.network=無法執行遷移。Ktor 伺服器可能不可用
ktor.migration.unavailable.no.modules=沒有可用於遷移的模組
ktor.migration.unavailable.no.version=遷移不可用。無法獲取最新版本
ktor.name=Ktor
ktor.no.urls.selected.to.test=未建立測試類別，因為未選擇任何測試。
ktor.notification.groups.errors=Ktor 錯誤
ktor.parameter.to.delegate=將 Ktor 參數轉換為委託
ktor.parameter.to.delegate.error=不適用於此屬性
ktor.perform.migration.dialog.module=遷移單個模組\:
ktor.perform.migration.dialog.ok=遷移
ktor.perform.migration.dialog.preparation=正在準備 Ktor 遷移對話框
ktor.perform.migration.dialog.project=遷移專案
ktor.perform.migration.dialog.title=正在遷移到 Ktor {0}
ktor.perform.migration.dialog.warning=遷移後您可能需要手動修正一些錯誤
ktor.plugin.add.status.dependencies.added=已新增 {0} 建置系統相依項
ktor.plugins.added.count=已新增 {0} 延伸模組
ktor.plugins.added.count.single=已新增 1 個延伸模組
ktor.plugins.configurable.github.link=檢視延伸模組的 GitHub
ktor.plugins.dependent.remove=依賴於 {0} 的以下延伸模組將被移除\:\n{1}
ktor.plugins.dependent.remove.title=相依延伸模組
ktor.plugins.hide=隱藏
ktor.plugins.required.add=以下延伸模組將隨 {0} 一起新增\:\n{1}
ktor.plugins.required.add.title=必需延伸模組
ktor.plugins.show=顯示
ktor.progress.text.getting.latest.migration.for.ktor.server=正在獲取 Ktor 伺服器的最新遷移…
ktor.progress.text.migrating.module=模組\: {0}
ktor.progress.text.performing.replace=正在取代\: {0}
ktor.progress.text.updating.imports=正在更新 import…
ktor.progress.text.updating.ktor.dependencies=正在更新 Ktor 相依項…
ktor.route.test.class.name=測試類別名\:
ktor.route.test.name=測試名稱\:
ktor.run.config.enable.development.mode.tag=開發模式
ktor.run.config.enable.development.mode.tag.description=-Dio.ktor.development\=true
ktor.run.config.enable.development.mode.tag.hint=<html>通過新增虛擬機選項啟用開發模式 <code>-Dio.ktor.development\=true</code></html>
ktor.run.config.fragment.group=Ktor
ktor.run.configuration.class.not.specified=未指定 Ktor 應用程式類別
ktor.run.configuration.configuration.tab.title=Ktor 組態
ktor.run.configuration.main.class=Ktor 主類別
ktor.run.configuration.name=Ktor
ktor.run.configuration.type.description=Ktor 應用程式
ktor.searching.app.extension=正在搜尋應用程式擴展程序
ktor.searching.routing.call=正在搜尋路由擴展呼叫
ktor.select.package.test=打包\:
ktor.select.test.routes.table.method.title=方法
ktor.select.test.routes.table.route.title=路由
ktor.select.test.routes.table.test.name.title=測試名稱(可編輯)
ktor.swagger.action.multiple.content.roots.for.module={0} 的多個內容根
ktor.swagger.action.notification.content.cannot.create.resources.root.for.swagger.file=無法為 Swagger 檔案建立資源根\: {0}
ktor.swagger.action.notification.title.cannot.create.resources.root.for.swagger.file=無法建立新的 OpenAPI 文檔
ktor.swagger.action.openapi.folder.already.exists={1} 下已存在 ''{0}'' 目錄
ktor.swagger.action.openapi.under.sources.root={0} 在來源根下
ktor.swagger.already.exists.message=當前模組的 OpenAPI 文檔已存在。是否要覆蓋它?
ktor.swagger.already.exists.title=覆蓋 OpenAPI 文檔
ktor.update.openapi.fix=為當前模組更新 OpenAPI 文檔
ktor.update.openapi.inspection=當前模組的 OpenAPI 文檔已過時
ktor.wizard.combobox.default.tip=預設
ktor.yaml.property.description.application.modules=要載入的 Ktor 模組。
ktor.yaml.property.description.host=主機地址
ktor.yaml.property.description.port=偵聽連接埠。您可以將此屬性設定為 0 以在隨機連接埠上執行伺服器
ktor.yaml.property.description.rootPath=servlet 上下文路徑。
ktor.yaml.property.description.shutdown.url=關閉 URL。請注意，此選項使用 ShutDownUrl 延伸模組。
ktor.yaml.property.description.ssl.keyAlias=SSL 密鑰庫的別名。
ktor.yaml.property.description.ssl.keyStore=SSL 密鑰庫。
ktor.yaml.property.description.ssl.keyStorePassword=SSL 密鑰庫的密碼。
ktor.yaml.property.description.ssl.privateKeyPassword=SSL 私鑰的密碼。
ktor.yaml.property.description.sslPort=偵聽 SSL 連接埠。您可以將此屬性設定為 0 以在隨機連接埠上執行伺服器
ktor.yaml.property.description.watch=監視用於自動重新載入的路徑。
label.advanced.settings=進階設定
label.artifact=工件\:
label.build.system=建置系統\:
label.configuration.in=以下位置中的組態\:
label.group=組\:
label.ktor.version=Ktor 版本\:
label.server.engine=引擎\:
message.failed.to.connect.start.ktor.io=無法連線到 Ktor 產生器網站 start.ktor.io\n請檢查 URL、網絡和代理設定。\n\n錯誤訊息\: \n{0}
message.state.downloading.project=正在生成 Ktor 專案…
migration.level.none=不建議遷移
migration.level.stable=穩定版
plugins.ide.add.button=新增
plugins.ide.remove.button=移除
presentable.name.ktor.starter=Ktor
title.error=錯誤
