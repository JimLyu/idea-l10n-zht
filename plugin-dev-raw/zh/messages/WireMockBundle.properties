action.Swagger.GenerateWireMockStubs.text=生成 WireMock 存根
action.WireMock.GenerateStub.text=生成 WireMock 存根
action.WireMock.RunThisFile.text=啟動 WireMock 伺服器
action.WireMock.ToggleHandlebars.description=為響應 `body` 和 `bodyFileName` 特性啟用 Handlebars 模板
action.WireMock.ToggleHandlebars.text=使用 Handlebars 模板
action.WireMock.ToggleHandlebars.text.requires.plugin=使用 Handlebars 模板(需要 Handlebars 延伸模組)
advanced.setting.wiremock.schema.detection.enabled=檢測 JSON 架構
dialog.title.generating.stubs=正在生成 WireMock 存根…
generate.stubs.command.action=生成 WireMock 存根
run.configuration.codegen.validation.0.is.not.a.file=指定的“{0}”不是檔案
run.configuration.codegen.validation.file.does.not.exist=指定的“{0}”不存在
run.configuration.codegen.validation.no.jdk=未找到 JRE
run.configuration.codegen.validation.unspecified.0.property=未指定“{0}”
run.configuration.jre.default=預設
run.configuration.jre.path=JRE
run.configuration.mappings.path=存根檔案
run.configuration.mappings.path.dialog=存根檔案
run.configuration.server.port=伺服器連接埠
run.configuration.templatingEnabled=啟用全域 Handlebars 模板化
run.configuration.templatingEnabled.description=使用 Handlebars 模板呈現響應
run.configuration.verbose=詳細輸出
wiremock.configurable=WireMock
wiremock.configurable.handlebars.enabled=在編輯器中使用 Handlebars 模板
wiremock.model.request=請求物件
wiremock.model.request.baseUrl=URL 直到路徑開始的部分，例如 https\://my.example.com\:8080
wiremock.model.request.body=請求正文文本(避免使用非文本正文)
wiremock.model.request.bodyAsBase64=從 WireMock 3.8.0 開始，請求正文的 Base64 表示。
wiremock.model.request.cookies=Cookies 映射
wiremock.model.request.headers=標頭映射
wiremock.model.request.host=URL 的主機名部分，例如 my.example.com
wiremock.model.request.id=每個請求的唯一 ID
wiremock.model.request.method=請求方法
wiremock.model.request.multipart=如果請求是多部分請求(布林值)
wiremock.model.request.parts=多部分請求的各個部分通過模板模型公開
wiremock.model.request.path=URL 路徑
wiremock.model.request.pathSegments=URL 路徑段(零索引)
wiremock.model.request.port=端口號
wiremock.model.request.query=查詢參數
wiremock.model.request.scheme=URL 的協議部分，例如 https
wiremock.model.request.url=URL 路徑和查詢
wiremock.run.description=API 模擬測試的伺服器
wiremock.schema.detection.description=自動為定義了 WireMock 存根映射的檔案指定 JSON 架構，以提供屬性補全
wiremock.stubs.scratch.root=WireMock 存根
