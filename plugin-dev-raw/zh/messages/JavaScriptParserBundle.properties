filetype.flow.description=Flow JS
filetype.flow.display.name=Flow JS
filetype.javascript.description=JavaScript
filetype.jsx.description=JSX
filetype.jsx.display.name=JSX
filetype.typescript.config.description=TypeScript 組態
filetype.typescript.config.display.name=TypeScript 組態
filetype.typescript.description=TypeScript
filetype.typescript.jsx.description=TypeScript JSX
interface.function.declaration.should.have.no.body=接口函式宣告不應有本體
interface.should.have.no.variable.declarations=接口不應有變量宣告
javascript.ambient.declaration.should.have.no.body=環境宣告不應有本體
javascript.parser.message.are.not.supported.by.dialect=當前 JavaScript 版本不支持 {0}
javascript.parser.message.expected.as=應為 'as'
javascript.parser.message.expected.at=應為 @
javascript.parser.message.expected.case.or.default=應為 'case' 或 'default'
javascript.parser.message.expected.checks=應為 'checks'
javascript.parser.message.expected.class=應為 'class'
javascript.parser.message.expected.colon=應為 \:
javascript.parser.message.expected.colon.or.comma=應為 \: 或 ,
javascript.parser.message.expected.comma=應為 ,
javascript.parser.message.expected.comma.or.rbrace=應為 , 或 }
javascript.parser.message.expected.comma.or.rparen=應為 , 或 )
javascript.parser.message.expected.declaration=應為宣告
javascript.parser.message.expected.declare=應為 'declare'
javascript.parser.message.expected.dot=應為 .
javascript.parser.message.expected.eqgt=應為 \=>
javascript.parser.message.expected.equal=應為 \=
javascript.parser.message.expected.exports=應為 'exports'
javascript.parser.message.expected.expression=應為表達式
javascript.parser.message.expected.forloop.in.or.semicolon=應為 'in' 或 ;
javascript.parser.message.expected.forloop.left.hand.side.expression.or.variable.declaration='in' 前面應為左側表達式或變數宣告
javascript.parser.message.expected.forloop.using.not.allowed.in.for-in='for-in' 迴圈中不允許使用 'using'
javascript.parser.message.expected.formal.parameter.name=應為參數名稱
javascript.parser.message.expected.from=應為 'from'
javascript.parser.message.expected.function.name=應為函式名稱
javascript.parser.message.expected.gt=應為 >
javascript.parser.message.expected.identifier=應為關鍵字
javascript.parser.message.expected.identifier.lbrace.or.lbracket=應為關鍵字、{ 或 [
javascript.parser.message.expected.identifier.or.value=應為關鍵字或值
javascript.parser.message.expected.identifier.string.literal.or.lbrace=應為關鍵字、字串字面量或 {
javascript.parser.message.expected.identifier.string.literal.or.numeric.literal=應為關鍵字、字串字面量或數字字面量
javascript.parser.message.expected.identifier.string.literal.or.rbrace=應為關鍵字、字串字面量或 }
javascript.parser.message.expected.import.specifier=應為匯入說明符
javascript.parser.message.expected.import.value=應為匯入綁定或說明符
javascript.parser.message.expected.in=應為 'in'
javascript.parser.message.expected.instanceof=應為 'instanceof'
javascript.parser.message.expected.lbrace=應為 {
javascript.parser.message.expected.lbrace.or.semicolon=應為 { 或 ;
javascript.parser.message.expected.lbracket=應為 [
javascript.parser.message.expected.lparen=應為 (
javascript.parser.message.expected.meta=僅接受 'meta'、'source' 或 'defer' 作為 import 的元屬性
javascript.parser.message.expected.mult.or.lbrace=應為 * 或 {
javascript.parser.message.expected.name=應為名稱
javascript.parser.message.expected.name.or.lbrace=應為軟體套件名稱或 {
javascript.parser.message.expected.namespace=應為 'namespace'
javascript.parser.message.expected.newline.or.semicolon=需要換行符或分號
javascript.parser.message.expected.one.of=應為 {0} 之一。
javascript.parser.message.expected.parameter.name=應為參數名稱
javascript.parser.message.expected.property.name=應為屬性名稱
javascript.parser.message.expected.question=應為 ?
javascript.parser.message.expected.rbrace=應為 }
javascript.parser.message.expected.rbracket=應為 ]
javascript.parser.message.expected.readonly=應為 'readonly'
javascript.parser.message.expected.rparen=應為 )
javascript.parser.message.expected.semicolon=應為 ;
javascript.parser.message.expected.statement=應為語句
javascript.parser.message.expected.string.literal=應為字串字面量
javascript.parser.message.expected.target=僅接受 'target' 作為要新增的元屬性
javascript.parser.message.expected.tuple.comma.or.rbracket=應為 , 或 ]
javascript.parser.message.expected.type=應為類型
javascript.parser.message.expected.type.keyword=應為 'type'
javascript.parser.message.expected.type.member=應為類型成員
javascript.parser.message.expected.type.name=應為類型名稱
javascript.parser.message.expected.typename=應為類型名稱
javascript.parser.message.expected.typename.or.*=* 應為 * 或類型名稱
javascript.parser.message.expected.value=應為值
javascript.parser.message.expected.variable.name=應為變數名稱
javascript.parser.message.expected.while.keyword=應為 'while'
javascript.parser.message.expected.xml=應為 XML 上下文關鍵字
javascript.parser.message.expected.xml.element=應為 XML 元素
javascript.parser.message.missing.attribute.name=缺少特性名稱
javascript.parser.message.missing.back.quote=缺少 `
javascript.parser.message.missing.or_rbrace=缺少 |}
javascript.parser.message.missing.rbrace=缺少 }
javascript.parser.message.missing.rbracket=缺少 ]
javascript.parser.message.missing.rparen=缺少 )
javascript.parser.message.missing.tag.name=缺少標記名稱
javascript.parser.message.unclosed.comment=未閉合註釋
javascript.parser.message.unclosed.string.literal=未閉合的字串字面量
javascript.parser.message.unexpected.end.of.file=意外的檔案結尾
javascript.parser.message.unexpected.token=意外的標記 {0}
javascript.parser.property.expected=應為屬性
js.language.feature.annotations=註解
js.language.feature.arbitrary.precision.integers=任意精度整數
js.language.feature.arrow.functions=箭頭函式
js.language.feature.async.await=async/await
js.language.feature.binary.0b.and.new.octal.0o.literals=二進制(0b)和新的八進制(0o)字面量
js.language.feature.bind.expressions=綁定表達式
js.language.feature.class.member.visibility.modifiers=類別成員可見性修飾符
js.language.feature.classes=類別
js.language.feature.computed.property.names=計算的屬性名稱
js.language.feature.const.definitions=Const 定義
js.language.feature.decorator.declarations=裝飾器宣告
js.language.feature.default.parameter.values=預設參數值
js.language.feature.destructuring.assignments=解構賦值
js.language.feature.destructuring.parameters=解構參數
js.language.feature.ecmascript.syntax.for.private.members=私有成員的 ECMAScript \#- 語法
js.language.feature.enums=枚舉
js.language.feature.es6.export.declarations=ES6 匯出宣告
js.language.feature.es6.import.declarations=ES6 匯入宣告
js.language.feature.for.each.statements=針對每條語句
js.language.feature.for.of.loops=for..of 迴圈
js.language.feature.generators=生成器
js.language.feature.generics=泛型
js.language.feature.getters.and.setters=getter 和 setter
js.language.feature.interfaces=接口
js.language.feature.let.definitions=Let 定義
js.language.feature.method.definition.shorthands=方法定義速記形式
js.language.feature.nullish.coalescing=Null 合併運算符
js.language.feature.optional.catch.bindings=可選 catch 綁定
js.language.feature.optional.chaining.operator=可選鏈接運算符
js.language.feature.pipe.expressions=管道表達式
js.language.feature.reference.namespace=參照命名空間
js.language.feature.rest.parameters=rest 參數
js.language.feature.shorthand.property.names=速記屬性名稱
js.language.feature.string.templates=字串模板
js.language.feature.throw.expressions=拋出表達式
js.language.feature.trailing.commas.in.function.parameter.lists.and.calls=函式參數列表和呼叫中的尾隨逗號
js.language.feature.types=類型
js.language.feature.unicode.escapes.with.braces=使用大括號的 Unicode 轉義
js.language.feature.xml.tags=XML 標記
